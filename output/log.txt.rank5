[07/26 14:59:40] detectron2 INFO: Rank of current process: 5. World size: 8
[07/26 14:59:55] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.12 | packaged by conda-forge | (default, Oct 26 2021, 06:08:53) [GCC 9.4.0]
numpy                   1.19.5
detectron2              0.6 @/opt/conda/lib/python3.7/site-packages/detectron2
detectron2._C           not built correctly: /opt/conda/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so: undefined symbol: _ZNK2at6Tensor4add_ERKS0_RKN3c106ScalarE
Compiler ($CXX)         c++ (Debian 8.3.0-6) 8.3.0
CUDA compiler           Build cuda_11.3.r11.3/compiler.29920130_0
detectron2 arch flags   7.0
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.8.0+cu111 @/opt/conda/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1,2,3,4,5,6,7     NVIDIA A100-SXM4-40GB (arch=8.0)
Driver version          470.57.02
CUDA_HOME               /usr/local/cuda
Pillow                  9.1.1
torchvision             0.9.0+cu111 @/opt/conda/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20220512
iopath                  0.1.9
cv2                     4.6.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[07/26 14:59:55] detectron2 INFO: Command line arguments: Namespace(config_file='configs/Cityscapes-PanopticSegmentation/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=8, num_machines=1, opts=[], resume=False)
[07/26 14:59:55] detectron2 INFO: Contents of args.config_file=configs/Cityscapes-PanopticSegmentation/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBase-PanopticDeepLab-OS16.yaml[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mx65.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186md2_xception_65[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mSyncBN[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m90000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(512,[39m[38;5;141m [39m[38;5;141m1024)[39m

[07/26 14:59:55] detectron2.utils.env INFO: Using a generated random seed 55671330
[07/26 14:59:56] detectron2.engine.defaults INFO: Model:
PanopticDeepLab(
  (backbone): d2_xception_65(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
    (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (block1): XceptionBlock(
      (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
          (bn_depth): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn_depth): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn_depth): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block2): XceptionBlock(
      (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn_depth): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (bn_depth): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)
          (bn_depth): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block3): XceptionBlock(
      (conv): Conv2d(256, 728, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (bn_depth): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block4): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block5): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block6): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block7): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block8): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block9): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block10): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block11): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block12): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block13): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block14): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block15): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block16): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block17): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block18): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block19): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block20): XceptionBlock(
      (conv): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024, bias=False)
          (bn_depth): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block21): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1024, bias=False)
          (bn_depth): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1024, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1536, bias=False)
          (bn_depth): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1536, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1536, bias=False)
          (bn_depth): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1536, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
    )
  )
  (sem_seg_head): PanopticDeepLabSemSegHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            288, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          728, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            320, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (2): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (3): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(32, 64), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (head): Sequential(
      (0): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (predictor): Conv2d(256, 19, kernel_size=(1, 1), stride=(1, 1))
    (loss): DeepLabCE(
      (criterion): CrossEntropyLoss()
    )
  )
  (ins_embed_head): PanopticDeepLabInsEmbedHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            160, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          728, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            320, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (2): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (3): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(32, 64), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (center_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (center_predictor): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
    (offset_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (offset_predictor): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
    (center_loss): MSELoss()
    (offset_loss): L1Loss()
  )
)
[07/26 14:59:56] detectron2.projects.panoptic_deeplab.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=..., max_size=4096, sample_style='choice'), RandomCrop(crop_type='absolute', crop_size=[512, 1024]), RandomFlip()]
[07/26 15:18:07] detectron2 INFO: Rank of current process: 5. World size: 8
[07/26 15:19:51] detectron2 INFO: Rank of current process: 5. World size: 8
[07/26 15:20:04] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.12 | packaged by conda-forge | (default, Oct 26 2021, 06:08:53) [GCC 9.4.0]
numpy                   1.19.5
detectron2              0.6 @/opt/conda/lib/python3.7/site-packages/detectron2
detectron2._C           not built correctly: /opt/conda/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so: undefined symbol: _ZNK2at6Tensor4add_ERKS0_RKN3c106ScalarE
Compiler ($CXX)         c++ (Debian 8.3.0-6) 8.3.0
CUDA compiler           Build cuda_11.3.r11.3/compiler.29920130_0
detectron2 arch flags   7.0
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.8.1+cu111 @/opt/conda/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1,2,3,4,5,6,7     NVIDIA A100-SXM4-40GB (arch=8.0)
Driver version          470.57.02
CUDA_HOME               /usr/local/cuda
Pillow                  9.1.1
torchvision             0.9.1+cu111 @/opt/conda/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20220512
iopath                  0.1.9
cv2                     4.6.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[07/26 15:20:04] detectron2 INFO: Command line arguments: Namespace(config_file='configs/Cityscapes-PanopticSegmentation/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=8, num_machines=1, opts=[], resume=False)
[07/26 15:20:04] detectron2 INFO: Contents of args.config_file=configs/Cityscapes-PanopticSegmentation/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBase-PanopticDeepLab-OS16.yaml[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mx65.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186md2_xception_65[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mSyncBN[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m90000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(512,[39m[38;5;141m [39m[38;5;141m1024)[39m

[07/26 15:20:04] detectron2.utils.env INFO: Using a generated random seed 4445718
[07/26 15:20:06] detectron2.engine.defaults INFO: Model:
PanopticDeepLab(
  (backbone): d2_xception_65(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
    (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (block1): XceptionBlock(
      (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
          (bn_depth): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn_depth): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn_depth): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block2): XceptionBlock(
      (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn_depth): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (bn_depth): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)
          (bn_depth): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block3): XceptionBlock(
      (conv): Conv2d(256, 728, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (bn_depth): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block4): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block5): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block6): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block7): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block8): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block9): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block10): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block11): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block12): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block13): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block14): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block15): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block16): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block17): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block18): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block19): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block20): XceptionBlock(
      (conv): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024, bias=False)
          (bn_depth): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block21): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1024, bias=False)
          (bn_depth): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1024, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1536, bias=False)
          (bn_depth): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1536, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1536, bias=False)
          (bn_depth): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1536, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
    )
  )
  (sem_seg_head): PanopticDeepLabSemSegHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            288, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          728, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            320, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (2): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (3): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(32, 64), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (head): Sequential(
      (0): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (predictor): Conv2d(256, 19, kernel_size=(1, 1), stride=(1, 1))
    (loss): DeepLabCE(
      (criterion): CrossEntropyLoss()
    )
  )
  (ins_embed_head): PanopticDeepLabInsEmbedHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            160, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          728, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            320, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (2): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (3): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(32, 64), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (center_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (center_predictor): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
    (offset_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (offset_predictor): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
    (center_loss): MSELoss()
    (offset_loss): L1Loss()
  )
)
[07/26 15:20:06] detectron2.projects.panoptic_deeplab.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=..., max_size=4096, sample_style='choice'), RandomCrop(crop_type='absolute', crop_size=[512, 1024]), RandomFlip()]
[07/26 15:20:07] detectron2.data.datasets.cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[07/26 15:20:07] detectron2.data.build INFO: Using training sampler TrainingSampler
[07/26 15:20:08] detectron2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[07/26 15:20:08] detectron2.data.common INFO: Serialized dataset takes 4.12 MiB
[07/26 15:20:08] fvcore.common.checkpoint INFO: [Checkpointer] Loading from x65.pkl ...
[07/26 15:20:08] fvcore.common.checkpoint INFO: Reading a file from 'third_party'
[07/26 15:20:09] detectron2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone:
| Names in Model                           | Names in Checkpoint                                                                         | Shapes                             |
|:-----------------------------------------|:--------------------------------------------------------------------------------------------|:-----------------------------------|
| block1.bn.*                              | block1.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                        | (128,) () (128,) (128,) (128,)     |
| block1.conv.weight                       | block1.conv.weight                                                                          | (128, 64, 1, 1)                    |
| block1.sep_conv1.block.bn_depth.*        | block1.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (64,) () (64,) (64,) (64,)         |
| block1.sep_conv1.block.bn_point.*        | block1.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (128,) () (128,) (128,) (128,)     |
| block1.sep_conv1.block.depthwise.weight  | block1.sep_conv1.block.depthwise.weight                                                     | (64, 1, 3, 3)                      |
| block1.sep_conv1.block.pointwise.weight  | block1.sep_conv1.block.pointwise.weight                                                     | (128, 64, 1, 1)                    |
| block1.sep_conv2.block.bn_depth.*        | block1.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (128,) () (128,) (128,) (128,)     |
| block1.sep_conv2.block.bn_point.*        | block1.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (128,) () (128,) (128,) (128,)     |
| block1.sep_conv2.block.depthwise.weight  | block1.sep_conv2.block.depthwise.weight                                                     | (128, 1, 3, 3)                     |
| block1.sep_conv2.block.pointwise.weight  | block1.sep_conv2.block.pointwise.weight                                                     | (128, 128, 1, 1)                   |
| block1.sep_conv3.block.bn_depth.*        | block1.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (128,) () (128,) (128,) (128,)     |
| block1.sep_conv3.block.bn_point.*        | block1.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (128,) () (128,) (128,) (128,)     |
| block1.sep_conv3.block.depthwise.weight  | block1.sep_conv3.block.depthwise.weight                                                     | (128, 1, 3, 3)                     |
| block1.sep_conv3.block.pointwise.weight  | block1.sep_conv3.block.pointwise.weight                                                     | (128, 128, 1, 1)                   |
| block10.sep_conv1.block.bn_depth.*       | block10.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block10.sep_conv1.block.bn_point.*       | block10.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block10.sep_conv1.block.depthwise.weight | block10.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block10.sep_conv1.block.pointwise.weight | block10.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block10.sep_conv2.block.bn_depth.*       | block10.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block10.sep_conv2.block.bn_point.*       | block10.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block10.sep_conv2.block.depthwise.weight | block10.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block10.sep_conv2.block.pointwise.weight | block10.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block10.sep_conv3.block.bn_depth.*       | block10.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block10.sep_conv3.block.bn_point.*       | block10.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block10.sep_conv3.block.depthwise.weight | block10.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block10.sep_conv3.block.pointwise.weight | block10.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block11.sep_conv1.block.bn_depth.*       | block11.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block11.sep_conv1.block.bn_point.*       | block11.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block11.sep_conv1.block.depthwise.weight | block11.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block11.sep_conv1.block.pointwise.weight | block11.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block11.sep_conv2.block.bn_depth.*       | block11.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block11.sep_conv2.block.bn_point.*       | block11.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block11.sep_conv2.block.depthwise.weight | block11.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block11.sep_conv2.block.pointwise.weight | block11.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block11.sep_conv3.block.bn_depth.*       | block11.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block11.sep_conv3.block.bn_point.*       | block11.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block11.sep_conv3.block.depthwise.weight | block11.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block11.sep_conv3.block.pointwise.weight | block11.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block12.sep_conv1.block.bn_depth.*       | block12.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block12.sep_conv1.block.bn_point.*       | block12.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block12.sep_conv1.block.depthwise.weight | block12.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block12.sep_conv1.block.pointwise.weight | block12.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block12.sep_conv2.block.bn_depth.*       | block12.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block12.sep_conv2.block.bn_point.*       | block12.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block12.sep_conv2.block.depthwise.weight | block12.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block12.sep_conv2.block.pointwise.weight | block12.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block12.sep_conv3.block.bn_depth.*       | block12.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block12.sep_conv3.block.bn_point.*       | block12.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block12.sep_conv3.block.depthwise.weight | block12.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block12.sep_conv3.block.pointwise.weight | block12.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block13.sep_conv1.block.bn_depth.*       | block13.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block13.sep_conv1.block.bn_point.*       | block13.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block13.sep_conv1.block.depthwise.weight | block13.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block13.sep_conv1.block.pointwise.weight | block13.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block13.sep_conv2.block.bn_depth.*       | block13.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block13.sep_conv2.block.bn_point.*       | block13.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block13.sep_conv2.block.depthwise.weight | block13.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block13.sep_conv2.block.pointwise.weight | block13.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block13.sep_conv3.block.bn_depth.*       | block13.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block13.sep_conv3.block.bn_point.*       | block13.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block13.sep_conv3.block.depthwise.weight | block13.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block13.sep_conv3.block.pointwise.weight | block13.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block14.sep_conv1.block.bn_depth.*       | block14.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block14.sep_conv1.block.bn_point.*       | block14.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block14.sep_conv1.block.depthwise.weight | block14.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block14.sep_conv1.block.pointwise.weight | block14.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block14.sep_conv2.block.bn_depth.*       | block14.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block14.sep_conv2.block.bn_point.*       | block14.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block14.sep_conv2.block.depthwise.weight | block14.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block14.sep_conv2.block.pointwise.weight | block14.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block14.sep_conv3.block.bn_depth.*       | block14.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block14.sep_conv3.block.bn_point.*       | block14.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block14.sep_conv3.block.depthwise.weight | block14.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block14.sep_conv3.block.pointwise.weight | block14.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block15.sep_conv1.block.bn_depth.*       | block15.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block15.sep_conv1.block.bn_point.*       | block15.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block15.sep_conv1.block.depthwise.weight | block15.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block15.sep_conv1.block.pointwise.weight | block15.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block15.sep_conv2.block.bn_depth.*       | block15.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block15.sep_conv2.block.bn_point.*       | block15.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block15.sep_conv2.block.depthwise.weight | block15.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block15.sep_conv2.block.pointwise.weight | block15.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block15.sep_conv3.block.bn_depth.*       | block15.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block15.sep_conv3.block.bn_point.*       | block15.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block15.sep_conv3.block.depthwise.weight | block15.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block15.sep_conv3.block.pointwise.weight | block15.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block16.sep_conv1.block.bn_depth.*       | block16.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block16.sep_conv1.block.bn_point.*       | block16.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block16.sep_conv1.block.depthwise.weight | block16.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block16.sep_conv1.block.pointwise.weight | block16.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block16.sep_conv2.block.bn_depth.*       | block16.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block16.sep_conv2.block.bn_point.*       | block16.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block16.sep_conv2.block.depthwise.weight | block16.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block16.sep_conv2.block.pointwise.weight | block16.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block16.sep_conv3.block.bn_depth.*       | block16.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block16.sep_conv3.block.bn_point.*       | block16.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block16.sep_conv3.block.depthwise.weight | block16.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block16.sep_conv3.block.pointwise.weight | block16.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block17.sep_conv1.block.bn_depth.*       | block17.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block17.sep_conv1.block.bn_point.*       | block17.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block17.sep_conv1.block.depthwise.weight | block17.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block17.sep_conv1.block.pointwise.weight | block17.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block17.sep_conv2.block.bn_depth.*       | block17.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block17.sep_conv2.block.bn_point.*       | block17.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block17.sep_conv2.block.depthwise.weight | block17.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block17.sep_conv2.block.pointwise.weight | block17.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block17.sep_conv3.block.bn_depth.*       | block17.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block17.sep_conv3.block.bn_point.*       | block17.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block17.sep_conv3.block.depthwise.weight | block17.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block17.sep_conv3.block.pointwise.weight | block17.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block18.sep_conv1.block.bn_depth.*       | block18.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block18.sep_conv1.block.bn_point.*       | block18.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block18.sep_conv1.block.depthwise.weight | block18.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block18.sep_conv1.block.pointwise.weight | block18.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block18.sep_conv2.block.bn_depth.*       | block18.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block18.sep_conv2.block.bn_point.*       | block18.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block18.sep_conv2.block.depthwise.weight | block18.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block18.sep_conv2.block.pointwise.weight | block18.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block18.sep_conv3.block.bn_depth.*       | block18.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block18.sep_conv3.block.bn_point.*       | block18.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block18.sep_conv3.block.depthwise.weight | block18.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block18.sep_conv3.block.pointwise.weight | block18.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block19.sep_conv1.block.bn_depth.*       | block19.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block19.sep_conv1.block.bn_point.*       | block19.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block19.sep_conv1.block.depthwise.weight | block19.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block19.sep_conv1.block.pointwise.weight | block19.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block19.sep_conv2.block.bn_depth.*       | block19.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block19.sep_conv2.block.bn_point.*       | block19.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block19.sep_conv2.block.depthwise.weight | block19.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block19.sep_conv2.block.pointwise.weight | block19.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block19.sep_conv3.block.bn_depth.*       | block19.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block19.sep_conv3.block.bn_point.*       | block19.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block19.sep_conv3.block.depthwise.weight | block19.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block19.sep_conv3.block.pointwise.weight | block19.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block2.bn.*                              | block2.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                        | (256,) () (256,) (256,) (256,)     |
| block2.conv.weight                       | block2.conv.weight                                                                          | (256, 128, 1, 1)                   |
| block2.sep_conv1.block.bn_depth.*        | block2.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (128,) () (128,) (128,) (128,)     |
| block2.sep_conv1.block.bn_point.*        | block2.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (256,) () (256,) (256,) (256,)     |
| block2.sep_conv1.block.depthwise.weight  | block2.sep_conv1.block.depthwise.weight                                                     | (128, 1, 3, 3)                     |
| block2.sep_conv1.block.pointwise.weight  | block2.sep_conv1.block.pointwise.weight                                                     | (256, 128, 1, 1)                   |
| block2.sep_conv2.block.bn_depth.*        | block2.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (256,) () (256,) (256,) (256,)     |
| block2.sep_conv2.block.bn_point.*        | block2.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (256,) () (256,) (256,) (256,)     |
| block2.sep_conv2.block.depthwise.weight  | block2.sep_conv2.block.depthwise.weight                                                     | (256, 1, 3, 3)                     |
| block2.sep_conv2.block.pointwise.weight  | block2.sep_conv2.block.pointwise.weight                                                     | (256, 256, 1, 1)                   |
| block2.sep_conv3.block.bn_depth.*        | block2.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (256,) () (256,) (256,) (256,)     |
| block2.sep_conv3.block.bn_point.*        | block2.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (256,) () (256,) (256,) (256,)     |
| block2.sep_conv3.block.depthwise.weight  | block2.sep_conv3.block.depthwise.weight                                                     | (256, 1, 3, 3)                     |
| block2.sep_conv3.block.pointwise.weight  | block2.sep_conv3.block.pointwise.weight                                                     | (256, 256, 1, 1)                   |
| block20.bn.*                             | block20.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                       | (1024,) () (1024,) (1024,) (1024,) |
| block20.conv.weight                      | block20.conv.weight                                                                         | (1024, 728, 1, 1)                  |
| block20.sep_conv1.block.bn_depth.*       | block20.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block20.sep_conv1.block.bn_point.*       | block20.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block20.sep_conv1.block.depthwise.weight | block20.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block20.sep_conv1.block.pointwise.weight | block20.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block20.sep_conv2.block.bn_depth.*       | block20.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block20.sep_conv2.block.bn_point.*       | block20.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (1024,) () (1024,) (1024,) (1024,) |
| block20.sep_conv2.block.depthwise.weight | block20.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block20.sep_conv2.block.pointwise.weight | block20.sep_conv2.block.pointwise.weight                                                    | (1024, 728, 1, 1)                  |
| block20.sep_conv3.block.bn_depth.*       | block20.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (1024,) () (1024,) (1024,) (1024,) |
| block20.sep_conv3.block.bn_point.*       | block20.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (1024,) () (1024,) (1024,) (1024,) |
| block20.sep_conv3.block.depthwise.weight | block20.sep_conv3.block.depthwise.weight                                                    | (1024, 1, 3, 3)                    |
| block20.sep_conv3.block.pointwise.weight | block20.sep_conv3.block.pointwise.weight                                                    | (1024, 1024, 1, 1)                 |
| block21.sep_conv1.block.bn_depth.*       | block21.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (1024,) () (1024,) (1024,) (1024,) |
| block21.sep_conv1.block.bn_point.*       | block21.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (1536,) () (1536,) (1536,) (1536,) |
| block21.sep_conv1.block.depthwise.weight | block21.sep_conv1.block.depthwise.weight                                                    | (1024, 1, 3, 3)                    |
| block21.sep_conv1.block.pointwise.weight | block21.sep_conv1.block.pointwise.weight                                                    | (1536, 1024, 1, 1)                 |
| block21.sep_conv2.block.bn_depth.*       | block21.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (1536,) () (1536,) (1536,) (1536,) |
| block21.sep_conv2.block.bn_point.*       | block21.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (1536,) () (1536,) (1536,) (1536,) |
| block21.sep_conv2.block.depthwise.weight | block21.sep_conv2.block.depthwise.weight                                                    | (1536, 1, 3, 3)                    |
| block21.sep_conv2.block.pointwise.weight | block21.sep_conv2.block.pointwise.weight                                                    | (1536, 1536, 1, 1)                 |
| block21.sep_conv3.block.bn_depth.*       | block21.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (1536,) () (1536,) (1536,) (1536,) |
| block21.sep_conv3.block.bn_point.*       | block21.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (2048,) () (2048,) (2048,) (2048,) |
| block21.sep_conv3.block.depthwise.weight | block21.sep_conv3.block.depthwise.weight                                                    | (1536, 1, 3, 3)                    |
| block21.sep_conv3.block.pointwise.weight | block21.sep_conv3.block.pointwise.weight                                                    | (2048, 1536, 1, 1)                 |
| block3.bn.*                              | block3.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                        | (728,) () (728,) (728,) (728,)     |
| block3.conv.weight                       | block3.conv.weight                                                                          | (728, 256, 1, 1)                   |
| block3.sep_conv1.block.bn_depth.*        | block3.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (256,) () (256,) (256,) (256,)     |
| block3.sep_conv1.block.bn_point.*        | block3.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block3.sep_conv1.block.depthwise.weight  | block3.sep_conv1.block.depthwise.weight                                                     | (256, 1, 3, 3)                     |
| block3.sep_conv1.block.pointwise.weight  | block3.sep_conv1.block.pointwise.weight                                                     | (728, 256, 1, 1)                   |
| block3.sep_conv2.block.bn_depth.*        | block3.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block3.sep_conv2.block.bn_point.*        | block3.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block3.sep_conv2.block.depthwise.weight  | block3.sep_conv2.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block3.sep_conv2.block.pointwise.weight  | block3.sep_conv2.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block3.sep_conv3.block.bn_depth.*        | block3.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block3.sep_conv3.block.bn_point.*        | block3.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block3.sep_conv3.block.depthwise.weight  | block3.sep_conv3.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block3.sep_conv3.block.pointwise.weight  | block3.sep_conv3.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block4.sep_conv1.block.bn_depth.*        | block4.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block4.sep_conv1.block.bn_point.*        | block4.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block4.sep_conv1.block.depthwise.weight  | block4.sep_conv1.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block4.sep_conv1.block.pointwise.weight  | block4.sep_conv1.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block4.sep_conv2.block.bn_depth.*        | block4.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block4.sep_conv2.block.bn_point.*        | block4.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block4.sep_conv2.block.depthwise.weight  | block4.sep_conv2.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block4.sep_conv2.block.pointwise.weight  | block4.sep_conv2.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block4.sep_conv3.block.bn_depth.*        | block4.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block4.sep_conv3.block.bn_point.*        | block4.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block4.sep_conv3.block.depthwise.weight  | block4.sep_conv3.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block4.sep_conv3.block.pointwise.weight  | block4.sep_conv3.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block5.sep_conv1.block.bn_depth.*        | block5.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block5.sep_conv1.block.bn_point.*        | block5.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block5.sep_conv1.block.depthwise.weight  | block5.sep_conv1.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block5.sep_conv1.block.pointwise.weight  | block5.sep_conv1.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block5.sep_conv2.block.bn_depth.*        | block5.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block5.sep_conv2.block.bn_point.*        | block5.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block5.sep_conv2.block.depthwise.weight  | block5.sep_conv2.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block5.sep_conv2.block.pointwise.weight  | block5.sep_conv2.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block5.sep_conv3.block.bn_depth.*        | block5.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block5.sep_conv3.block.bn_point.*        | block5.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block5.sep_conv3.block.depthwise.weight  | block5.sep_conv3.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block5.sep_conv3.block.pointwise.weight  | block5.sep_conv3.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block6.sep_conv1.block.bn_depth.*        | block6.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block6.sep_conv1.block.bn_point.*        | block6.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block6.sep_conv1.block.depthwise.weight  | block6.sep_conv1.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block6.sep_conv1.block.pointwise.weight  | block6.sep_conv1.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block6.sep_conv2.block.bn_depth.*        | block6.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block6.sep_conv2.block.bn_point.*        | block6.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block6.sep_conv2.block.depthwise.weight  | block6.sep_conv2.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block6.sep_conv2.block.pointwise.weight  | block6.sep_conv2.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block6.sep_conv3.block.bn_depth.*        | block6.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block6.sep_conv3.block.bn_point.*        | block6.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block6.sep_conv3.block.depthwise.weight  | block6.sep_conv3.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block6.sep_conv3.block.pointwise.weight  | block6.sep_conv3.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block7.sep_conv1.block.bn_depth.*        | block7.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block7.sep_conv1.block.bn_point.*        | block7.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block7.sep_conv1.block.depthwise.weight  | block7.sep_conv1.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block7.sep_conv1.block.pointwise.weight  | block7.sep_conv1.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block7.sep_conv2.block.bn_depth.*        | block7.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block7.sep_conv2.block.bn_point.*        | block7.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block7.sep_conv2.block.depthwise.weight  | block7.sep_conv2.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block7.sep_conv2.block.pointwise.weight  | block7.sep_conv2.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block7.sep_conv3.block.bn_depth.*        | block7.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block7.sep_conv3.block.bn_point.*        | block7.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block7.sep_conv3.block.depthwise.weight  | block7.sep_conv3.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block7.sep_conv3.block.pointwise.weight  | block7.sep_conv3.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block8.sep_conv1.block.bn_depth.*        | block8.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block8.sep_conv1.block.bn_point.*        | block8.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block8.sep_conv1.block.depthwise.weight  | block8.sep_conv1.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block8.sep_conv1.block.pointwise.weight  | block8.sep_conv1.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block8.sep_conv2.block.bn_depth.*        | block8.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block8.sep_conv2.block.bn_point.*        | block8.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block8.sep_conv2.block.depthwise.weight  | block8.sep_conv2.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block8.sep_conv2.block.pointwise.weight  | block8.sep_conv2.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block8.sep_conv3.block.bn_depth.*        | block8.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block8.sep_conv3.block.bn_point.*        | block8.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block8.sep_conv3.block.depthwise.weight  | block8.sep_conv3.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block8.sep_conv3.block.pointwise.weight  | block8.sep_conv3.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block9.sep_conv1.block.bn_depth.*        | block9.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block9.sep_conv1.block.bn_point.*        | block9.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block9.sep_conv1.block.depthwise.weight  | block9.sep_conv1.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block9.sep_conv1.block.pointwise.weight  | block9.sep_conv1.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block9.sep_conv2.block.bn_depth.*        | block9.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block9.sep_conv2.block.bn_point.*        | block9.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block9.sep_conv2.block.depthwise.weight  | block9.sep_conv2.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block9.sep_conv2.block.pointwise.weight  | block9.sep_conv2.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block9.sep_conv3.block.bn_depth.*        | block9.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block9.sep_conv3.block.bn_point.*        | block9.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block9.sep_conv3.block.depthwise.weight  | block9.sep_conv3.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block9.sep_conv3.block.pointwise.weight  | block9.sep_conv3.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| bn1.*                                    | bn1.{bias,num_batches_tracked,running_mean,running_var,weight}                              | (32,) () (32,) (32,) (32,)         |
| bn2.*                                    | bn2.{bias,num_batches_tracked,running_mean,running_var,weight}                              | (64,) () (64,) (64,) (64,)         |
| conv1.weight                             | conv1.weight                                                                                | (32, 3, 3, 3)                      |
| conv2.weight                             | conv2.weight                                                                                | (64, 32, 3, 3)                     |
[07/26 15:20:11] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mins_embed_head.center_head.0.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.center_head.0.weight[0m
[34mins_embed_head.center_head.1.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.center_head.1.weight[0m
[34mins_embed_head.center_predictor.{bias, weight}[0m
[34mins_embed_head.decoder.res2.fuse_conv.0.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res2.fuse_conv.0.weight[0m
[34mins_embed_head.decoder.res2.fuse_conv.1.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res2.fuse_conv.1.weight[0m
[34mins_embed_head.decoder.res2.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res2.project_conv.weight[0m
[34mins_embed_head.decoder.res3.fuse_conv.0.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res3.fuse_conv.0.weight[0m
[34mins_embed_head.decoder.res3.fuse_conv.1.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res3.fuse_conv.1.weight[0m
[34mins_embed_head.decoder.res3.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res3.project_conv.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.0.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.0.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.1.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.1.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.2.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.2.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.3.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.3.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.4.1.{bias, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.project.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.project.weight[0m
[34mins_embed_head.offset_head.0.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.offset_head.0.weight[0m
[34mins_embed_head.offset_head.1.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.offset_head.1.weight[0m
[34mins_embed_head.offset_predictor.{bias, weight}[0m
[34msem_seg_head.decoder.res2.fuse_conv.0.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res2.fuse_conv.0.weight[0m
[34msem_seg_head.decoder.res2.fuse_conv.1.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res2.fuse_conv.1.weight[0m
[34msem_seg_head.decoder.res2.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res2.project_conv.weight[0m
[34msem_seg_head.decoder.res3.fuse_conv.0.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res3.fuse_conv.0.weight[0m
[34msem_seg_head.decoder.res3.fuse_conv.1.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res3.fuse_conv.1.weight[0m
[34msem_seg_head.decoder.res3.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res3.project_conv.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.0.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.0.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.1.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.1.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.2.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.2.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.3.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.3.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.4.1.{bias, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.project.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.project.weight[0m
[34msem_seg_head.head.0.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.head.0.weight[0m
[34msem_seg_head.head.1.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.head.1.weight[0m
[34msem_seg_head.predictor.{bias, weight}[0m
[07/26 15:20:11] detectron2.engine.train_loop INFO: Starting training from iteration 0
[07/27 10:10:55] detectron2.engine.hooks INFO: Overall training speed: 89998 iterations in 18:50:16 (0.7535 s / it)
[07/27 10:10:55] detectron2.engine.hooks INFO: Total training time: 18:50:23 (0:00:06 on hooks)
[07/27 10:10:55] detectron2.data.datasets.cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[07/27 10:10:55] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2048, sample_style='choice')]
[07/27 10:10:55] detectron2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[07/27 10:10:55] detectron2.data.common INFO: Serialized dataset takes 0.74 MiB
[07/27 10:10:55] detectron2.evaluation.evaluator INFO: Start inference on 62 batches
[07/27 10:10:58] detectron2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval_ecdpxv_g ...
[07/27 10:10:58] detectron2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval_o454a95i ...
[07/27 10:11:22] detectron2.evaluation.evaluator INFO: Inference done 11/62. Dataloading: 0.0008 s/iter. Inference: 0.2578 s/iter. Eval: 0.5172 s/iter. Total: 0.7758 s/iter. ETA=0:00:39
[07/27 10:11:27] detectron2.evaluation.evaluator INFO: Inference done 16/62. Dataloading: 0.0010 s/iter. Inference: 0.2749 s/iter. Eval: 0.6249 s/iter. Total: 0.9009 s/iter. ETA=0:00:41
[07/27 10:11:33] detectron2.evaluation.evaluator INFO: Inference done 22/62. Dataloading: 0.0009 s/iter. Inference: 0.2739 s/iter. Eval: 0.6440 s/iter. Total: 0.9188 s/iter. ETA=0:00:36
[07/27 10:11:38] detectron2.evaluation.evaluator INFO: Inference done 26/62. Dataloading: 0.0010 s/iter. Inference: 0.2799 s/iter. Eval: 0.7260 s/iter. Total: 1.0071 s/iter. ETA=0:00:36
[07/27 10:11:44] detectron2.evaluation.evaluator INFO: Inference done 31/62. Dataloading: 0.0011 s/iter. Inference: 0.2829 s/iter. Eval: 0.7570 s/iter. Total: 1.0411 s/iter. ETA=0:00:32
[07/27 10:11:50] detectron2.evaluation.evaluator INFO: Inference done 36/62. Dataloading: 0.0013 s/iter. Inference: 0.2836 s/iter. Eval: 0.7700 s/iter. Total: 1.0551 s/iter. ETA=0:00:27
[07/27 10:11:55] detectron2.evaluation.evaluator INFO: Inference done 41/62. Dataloading: 0.0013 s/iter. Inference: 0.2841 s/iter. Eval: 0.7764 s/iter. Total: 1.0620 s/iter. ETA=0:00:22
[07/27 10:12:01] detectron2.evaluation.evaluator INFO: Inference done 46/62. Dataloading: 0.0013 s/iter. Inference: 0.2844 s/iter. Eval: 0.7809 s/iter. Total: 1.0667 s/iter. ETA=0:00:17
[07/27 10:12:06] detectron2.evaluation.evaluator INFO: Inference done 51/62. Dataloading: 0.0013 s/iter. Inference: 0.2837 s/iter. Eval: 0.7748 s/iter. Total: 1.0599 s/iter. ETA=0:00:11
[07/27 10:12:11] detectron2.evaluation.evaluator INFO: Inference done 55/62. Dataloading: 0.0013 s/iter. Inference: 0.2855 s/iter. Eval: 0.7925 s/iter. Total: 1.0793 s/iter. ETA=0:00:07
[07/27 10:12:16] detectron2.evaluation.evaluator INFO: Inference done 60/62. Dataloading: 0.0013 s/iter. Inference: 0.2855 s/iter. Eval: 0.7941 s/iter. Total: 1.0811 s/iter. ETA=0:00:02
[07/27 10:12:20] detectron2.evaluation.evaluator INFO: Total inference time: 0:01:02.547646 (1.097327 s / iter per device, on 8 devices)
[07/27 10:12:20] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:16 (0.286535 s / iter per device, on 8 devices)
[08/19 14:30:45] detectron2 INFO: Rank of current process: 5. World size: 8
[08/19 14:31:00] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.12 | packaged by conda-forge | (default, Oct 26 2021, 06:08:53) [GCC 9.4.0]
numpy                   1.19.5
detectron2              0.6 @/opt/conda/lib/python3.7/site-packages/detectron2
detectron2._C           not built correctly: /opt/conda/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so: undefined symbol: _ZNK2at6Tensor4add_ERKS0_RKN3c106ScalarE
Compiler ($CXX)         c++ (Debian 8.3.0-6) 8.3.0
CUDA compiler           Build cuda_11.3.r11.3/compiler.29920130_0
detectron2 arch flags   7.0
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.8.1+cu111 @/opt/conda/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1,2,3,4,5,6,7     NVIDIA A100-SXM4-40GB (arch=8.0)
Driver version          495.46
CUDA_HOME               /usr/local/cuda
Pillow                  9.1.1
torchvision             0.9.1+cu111 @/opt/conda/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20220512
iopath                  0.1.9
cv2                     4.6.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[08/19 14:31:00] detectron2 INFO: Command line arguments: Namespace(config_file='configs/Cityscapes-PanopticSegmentation/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=8, num_machines=1, opts=[], resume=False)
[08/19 14:31:01] detectron2 INFO: Contents of args.config_file=configs/Cityscapes-PanopticSegmentation/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBase-PanopticDeepLab-OS16.yaml[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mx65.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186md2_xception_65[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mSyncBN[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m90000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(512,[39m[38;5;141m [39m[38;5;141m1024)[39m

[08/19 14:31:01] detectron2.utils.env INFO: Using a generated random seed 1192421
[08/19 14:31:02] detectron2.engine.defaults INFO: Model:
PanopticDeepLab(
  (backbone): d2_xception_65(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
    (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (block1): XceptionBlock(
      (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
          (bn_depth): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn_depth): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn_depth): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block2): XceptionBlock(
      (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn_depth): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (bn_depth): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)
          (bn_depth): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block3): XceptionBlock(
      (conv): Conv2d(256, 728, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (bn_depth): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block4): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block5): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block6): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block7): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block8): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block9): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block10): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block11): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block12): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block13): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block14): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block15): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block16): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block17): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block18): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block19): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block20): XceptionBlock(
      (conv): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024, bias=False)
          (bn_depth): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block21): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1024, bias=False)
          (bn_depth): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1024, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1536, bias=False)
          (bn_depth): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1536, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1536, bias=False)
          (bn_depth): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1536, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
    )
  )
  (sem_seg_head): PanopticDeepLabSemSegHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            288, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          728, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            320, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (2): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (3): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(32, 64), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (head): Sequential(
      (0): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (predictor): Conv2d(256, 19, kernel_size=(1, 1), stride=(1, 1))
    (loss): DeepLabCE(
      (criterion): CrossEntropyLoss()
    )
  )
  (ins_embed_head): PanopticDeepLabInsEmbedHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            160, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          728, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            320, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (2): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (3): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(32, 64), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (center_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (center_predictor): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
    (offset_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (offset_predictor): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
    (center_loss): MSELoss()
    (offset_loss): L1Loss()
  )
)
[08/19 14:31:02] detectron2.projects.panoptic_deeplab.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=..., max_size=4096, sample_style='choice'), RandomCrop(crop_type='absolute', crop_size=[512, 1024]), RandomFlip()]
[08/19 14:31:02] detectron2.data.datasets.cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/19 14:31:02] detectron2.data.build INFO: Using training sampler TrainingSampler
[08/19 14:31:02] detectron2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/19 14:31:02] detectron2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/19 14:31:02] fvcore.common.checkpoint INFO: [Checkpointer] Loading from x65.pkl ...
[08/19 14:31:03] fvcore.common.checkpoint INFO: Reading a file from 'third_party'
[08/19 14:31:03] detectron2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone:
| Names in Model                           | Names in Checkpoint                                                                         | Shapes                             |
|:-----------------------------------------|:--------------------------------------------------------------------------------------------|:-----------------------------------|
| block1.bn.*                              | block1.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                        | (128,) () (128,) (128,) (128,)     |
| block1.conv.weight                       | block1.conv.weight                                                                          | (128, 64, 1, 1)                    |
| block1.sep_conv1.block.bn_depth.*        | block1.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (64,) () (64,) (64,) (64,)         |
| block1.sep_conv1.block.bn_point.*        | block1.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (128,) () (128,) (128,) (128,)     |
| block1.sep_conv1.block.depthwise.weight  | block1.sep_conv1.block.depthwise.weight                                                     | (64, 1, 3, 3)                      |
| block1.sep_conv1.block.pointwise.weight  | block1.sep_conv1.block.pointwise.weight                                                     | (128, 64, 1, 1)                    |
| block1.sep_conv2.block.bn_depth.*        | block1.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (128,) () (128,) (128,) (128,)     |
| block1.sep_conv2.block.bn_point.*        | block1.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (128,) () (128,) (128,) (128,)     |
| block1.sep_conv2.block.depthwise.weight  | block1.sep_conv2.block.depthwise.weight                                                     | (128, 1, 3, 3)                     |
| block1.sep_conv2.block.pointwise.weight  | block1.sep_conv2.block.pointwise.weight                                                     | (128, 128, 1, 1)                   |
| block1.sep_conv3.block.bn_depth.*        | block1.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (128,) () (128,) (128,) (128,)     |
| block1.sep_conv3.block.bn_point.*        | block1.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (128,) () (128,) (128,) (128,)     |
| block1.sep_conv3.block.depthwise.weight  | block1.sep_conv3.block.depthwise.weight                                                     | (128, 1, 3, 3)                     |
| block1.sep_conv3.block.pointwise.weight  | block1.sep_conv3.block.pointwise.weight                                                     | (128, 128, 1, 1)                   |
| block10.sep_conv1.block.bn_depth.*       | block10.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block10.sep_conv1.block.bn_point.*       | block10.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block10.sep_conv1.block.depthwise.weight | block10.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block10.sep_conv1.block.pointwise.weight | block10.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block10.sep_conv2.block.bn_depth.*       | block10.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block10.sep_conv2.block.bn_point.*       | block10.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block10.sep_conv2.block.depthwise.weight | block10.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block10.sep_conv2.block.pointwise.weight | block10.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block10.sep_conv3.block.bn_depth.*       | block10.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block10.sep_conv3.block.bn_point.*       | block10.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block10.sep_conv3.block.depthwise.weight | block10.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block10.sep_conv3.block.pointwise.weight | block10.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block11.sep_conv1.block.bn_depth.*       | block11.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block11.sep_conv1.block.bn_point.*       | block11.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block11.sep_conv1.block.depthwise.weight | block11.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block11.sep_conv1.block.pointwise.weight | block11.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block11.sep_conv2.block.bn_depth.*       | block11.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block11.sep_conv2.block.bn_point.*       | block11.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block11.sep_conv2.block.depthwise.weight | block11.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block11.sep_conv2.block.pointwise.weight | block11.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block11.sep_conv3.block.bn_depth.*       | block11.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block11.sep_conv3.block.bn_point.*       | block11.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block11.sep_conv3.block.depthwise.weight | block11.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block11.sep_conv3.block.pointwise.weight | block11.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block12.sep_conv1.block.bn_depth.*       | block12.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block12.sep_conv1.block.bn_point.*       | block12.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block12.sep_conv1.block.depthwise.weight | block12.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block12.sep_conv1.block.pointwise.weight | block12.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block12.sep_conv2.block.bn_depth.*       | block12.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block12.sep_conv2.block.bn_point.*       | block12.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block12.sep_conv2.block.depthwise.weight | block12.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block12.sep_conv2.block.pointwise.weight | block12.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block12.sep_conv3.block.bn_depth.*       | block12.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block12.sep_conv3.block.bn_point.*       | block12.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block12.sep_conv3.block.depthwise.weight | block12.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block12.sep_conv3.block.pointwise.weight | block12.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block13.sep_conv1.block.bn_depth.*       | block13.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block13.sep_conv1.block.bn_point.*       | block13.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block13.sep_conv1.block.depthwise.weight | block13.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block13.sep_conv1.block.pointwise.weight | block13.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block13.sep_conv2.block.bn_depth.*       | block13.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block13.sep_conv2.block.bn_point.*       | block13.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block13.sep_conv2.block.depthwise.weight | block13.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block13.sep_conv2.block.pointwise.weight | block13.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block13.sep_conv3.block.bn_depth.*       | block13.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block13.sep_conv3.block.bn_point.*       | block13.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block13.sep_conv3.block.depthwise.weight | block13.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block13.sep_conv3.block.pointwise.weight | block13.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block14.sep_conv1.block.bn_depth.*       | block14.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block14.sep_conv1.block.bn_point.*       | block14.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block14.sep_conv1.block.depthwise.weight | block14.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block14.sep_conv1.block.pointwise.weight | block14.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block14.sep_conv2.block.bn_depth.*       | block14.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block14.sep_conv2.block.bn_point.*       | block14.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block14.sep_conv2.block.depthwise.weight | block14.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block14.sep_conv2.block.pointwise.weight | block14.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block14.sep_conv3.block.bn_depth.*       | block14.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block14.sep_conv3.block.bn_point.*       | block14.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block14.sep_conv3.block.depthwise.weight | block14.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block14.sep_conv3.block.pointwise.weight | block14.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block15.sep_conv1.block.bn_depth.*       | block15.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block15.sep_conv1.block.bn_point.*       | block15.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block15.sep_conv1.block.depthwise.weight | block15.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block15.sep_conv1.block.pointwise.weight | block15.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block15.sep_conv2.block.bn_depth.*       | block15.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block15.sep_conv2.block.bn_point.*       | block15.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block15.sep_conv2.block.depthwise.weight | block15.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block15.sep_conv2.block.pointwise.weight | block15.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block15.sep_conv3.block.bn_depth.*       | block15.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block15.sep_conv3.block.bn_point.*       | block15.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block15.sep_conv3.block.depthwise.weight | block15.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block15.sep_conv3.block.pointwise.weight | block15.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block16.sep_conv1.block.bn_depth.*       | block16.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block16.sep_conv1.block.bn_point.*       | block16.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block16.sep_conv1.block.depthwise.weight | block16.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block16.sep_conv1.block.pointwise.weight | block16.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block16.sep_conv2.block.bn_depth.*       | block16.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block16.sep_conv2.block.bn_point.*       | block16.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block16.sep_conv2.block.depthwise.weight | block16.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block16.sep_conv2.block.pointwise.weight | block16.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block16.sep_conv3.block.bn_depth.*       | block16.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block16.sep_conv3.block.bn_point.*       | block16.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block16.sep_conv3.block.depthwise.weight | block16.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block16.sep_conv3.block.pointwise.weight | block16.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block17.sep_conv1.block.bn_depth.*       | block17.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block17.sep_conv1.block.bn_point.*       | block17.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block17.sep_conv1.block.depthwise.weight | block17.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block17.sep_conv1.block.pointwise.weight | block17.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block17.sep_conv2.block.bn_depth.*       | block17.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block17.sep_conv2.block.bn_point.*       | block17.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block17.sep_conv2.block.depthwise.weight | block17.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block17.sep_conv2.block.pointwise.weight | block17.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block17.sep_conv3.block.bn_depth.*       | block17.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block17.sep_conv3.block.bn_point.*       | block17.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block17.sep_conv3.block.depthwise.weight | block17.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block17.sep_conv3.block.pointwise.weight | block17.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block18.sep_conv1.block.bn_depth.*       | block18.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block18.sep_conv1.block.bn_point.*       | block18.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block18.sep_conv1.block.depthwise.weight | block18.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block18.sep_conv1.block.pointwise.weight | block18.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block18.sep_conv2.block.bn_depth.*       | block18.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block18.sep_conv2.block.bn_point.*       | block18.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block18.sep_conv2.block.depthwise.weight | block18.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block18.sep_conv2.block.pointwise.weight | block18.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block18.sep_conv3.block.bn_depth.*       | block18.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block18.sep_conv3.block.bn_point.*       | block18.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block18.sep_conv3.block.depthwise.weight | block18.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block18.sep_conv3.block.pointwise.weight | block18.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block19.sep_conv1.block.bn_depth.*       | block19.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block19.sep_conv1.block.bn_point.*       | block19.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block19.sep_conv1.block.depthwise.weight | block19.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block19.sep_conv1.block.pointwise.weight | block19.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block19.sep_conv2.block.bn_depth.*       | block19.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block19.sep_conv2.block.bn_point.*       | block19.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block19.sep_conv2.block.depthwise.weight | block19.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block19.sep_conv2.block.pointwise.weight | block19.sep_conv2.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block19.sep_conv3.block.bn_depth.*       | block19.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block19.sep_conv3.block.bn_point.*       | block19.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block19.sep_conv3.block.depthwise.weight | block19.sep_conv3.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block19.sep_conv3.block.pointwise.weight | block19.sep_conv3.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block2.bn.*                              | block2.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                        | (256,) () (256,) (256,) (256,)     |
| block2.conv.weight                       | block2.conv.weight                                                                          | (256, 128, 1, 1)                   |
| block2.sep_conv1.block.bn_depth.*        | block2.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (128,) () (128,) (128,) (128,)     |
| block2.sep_conv1.block.bn_point.*        | block2.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (256,) () (256,) (256,) (256,)     |
| block2.sep_conv1.block.depthwise.weight  | block2.sep_conv1.block.depthwise.weight                                                     | (128, 1, 3, 3)                     |
| block2.sep_conv1.block.pointwise.weight  | block2.sep_conv1.block.pointwise.weight                                                     | (256, 128, 1, 1)                   |
| block2.sep_conv2.block.bn_depth.*        | block2.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (256,) () (256,) (256,) (256,)     |
| block2.sep_conv2.block.bn_point.*        | block2.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (256,) () (256,) (256,) (256,)     |
| block2.sep_conv2.block.depthwise.weight  | block2.sep_conv2.block.depthwise.weight                                                     | (256, 1, 3, 3)                     |
| block2.sep_conv2.block.pointwise.weight  | block2.sep_conv2.block.pointwise.weight                                                     | (256, 256, 1, 1)                   |
| block2.sep_conv3.block.bn_depth.*        | block2.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (256,) () (256,) (256,) (256,)     |
| block2.sep_conv3.block.bn_point.*        | block2.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (256,) () (256,) (256,) (256,)     |
| block2.sep_conv3.block.depthwise.weight  | block2.sep_conv3.block.depthwise.weight                                                     | (256, 1, 3, 3)                     |
| block2.sep_conv3.block.pointwise.weight  | block2.sep_conv3.block.pointwise.weight                                                     | (256, 256, 1, 1)                   |
| block20.bn.*                             | block20.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                       | (1024,) () (1024,) (1024,) (1024,) |
| block20.conv.weight                      | block20.conv.weight                                                                         | (1024, 728, 1, 1)                  |
| block20.sep_conv1.block.bn_depth.*       | block20.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block20.sep_conv1.block.bn_point.*       | block20.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block20.sep_conv1.block.depthwise.weight | block20.sep_conv1.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block20.sep_conv1.block.pointwise.weight | block20.sep_conv1.block.pointwise.weight                                                    | (728, 728, 1, 1)                   |
| block20.sep_conv2.block.bn_depth.*       | block20.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (728,) () (728,) (728,) (728,)     |
| block20.sep_conv2.block.bn_point.*       | block20.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (1024,) () (1024,) (1024,) (1024,) |
| block20.sep_conv2.block.depthwise.weight | block20.sep_conv2.block.depthwise.weight                                                    | (728, 1, 3, 3)                     |
| block20.sep_conv2.block.pointwise.weight | block20.sep_conv2.block.pointwise.weight                                                    | (1024, 728, 1, 1)                  |
| block20.sep_conv3.block.bn_depth.*       | block20.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (1024,) () (1024,) (1024,) (1024,) |
| block20.sep_conv3.block.bn_point.*       | block20.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (1024,) () (1024,) (1024,) (1024,) |
| block20.sep_conv3.block.depthwise.weight | block20.sep_conv3.block.depthwise.weight                                                    | (1024, 1, 3, 3)                    |
| block20.sep_conv3.block.pointwise.weight | block20.sep_conv3.block.pointwise.weight                                                    | (1024, 1024, 1, 1)                 |
| block21.sep_conv1.block.bn_depth.*       | block21.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (1024,) () (1024,) (1024,) (1024,) |
| block21.sep_conv1.block.bn_point.*       | block21.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (1536,) () (1536,) (1536,) (1536,) |
| block21.sep_conv1.block.depthwise.weight | block21.sep_conv1.block.depthwise.weight                                                    | (1024, 1, 3, 3)                    |
| block21.sep_conv1.block.pointwise.weight | block21.sep_conv1.block.pointwise.weight                                                    | (1536, 1024, 1, 1)                 |
| block21.sep_conv2.block.bn_depth.*       | block21.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (1536,) () (1536,) (1536,) (1536,) |
| block21.sep_conv2.block.bn_point.*       | block21.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (1536,) () (1536,) (1536,) (1536,) |
| block21.sep_conv2.block.depthwise.weight | block21.sep_conv2.block.depthwise.weight                                                    | (1536, 1, 3, 3)                    |
| block21.sep_conv2.block.pointwise.weight | block21.sep_conv2.block.pointwise.weight                                                    | (1536, 1536, 1, 1)                 |
| block21.sep_conv3.block.bn_depth.*       | block21.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight} | (1536,) () (1536,) (1536,) (1536,) |
| block21.sep_conv3.block.bn_point.*       | block21.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight} | (2048,) () (2048,) (2048,) (2048,) |
| block21.sep_conv3.block.depthwise.weight | block21.sep_conv3.block.depthwise.weight                                                    | (1536, 1, 3, 3)                    |
| block21.sep_conv3.block.pointwise.weight | block21.sep_conv3.block.pointwise.weight                                                    | (2048, 1536, 1, 1)                 |
| block3.bn.*                              | block3.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                        | (728,) () (728,) (728,) (728,)     |
| block3.conv.weight                       | block3.conv.weight                                                                          | (728, 256, 1, 1)                   |
| block3.sep_conv1.block.bn_depth.*        | block3.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (256,) () (256,) (256,) (256,)     |
| block3.sep_conv1.block.bn_point.*        | block3.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block3.sep_conv1.block.depthwise.weight  | block3.sep_conv1.block.depthwise.weight                                                     | (256, 1, 3, 3)                     |
| block3.sep_conv1.block.pointwise.weight  | block3.sep_conv1.block.pointwise.weight                                                     | (728, 256, 1, 1)                   |
| block3.sep_conv2.block.bn_depth.*        | block3.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block3.sep_conv2.block.bn_point.*        | block3.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block3.sep_conv2.block.depthwise.weight  | block3.sep_conv2.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block3.sep_conv2.block.pointwise.weight  | block3.sep_conv2.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block3.sep_conv3.block.bn_depth.*        | block3.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block3.sep_conv3.block.bn_point.*        | block3.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block3.sep_conv3.block.depthwise.weight  | block3.sep_conv3.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block3.sep_conv3.block.pointwise.weight  | block3.sep_conv3.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block4.sep_conv1.block.bn_depth.*        | block4.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block4.sep_conv1.block.bn_point.*        | block4.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block4.sep_conv1.block.depthwise.weight  | block4.sep_conv1.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block4.sep_conv1.block.pointwise.weight  | block4.sep_conv1.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block4.sep_conv2.block.bn_depth.*        | block4.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block4.sep_conv2.block.bn_point.*        | block4.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block4.sep_conv2.block.depthwise.weight  | block4.sep_conv2.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block4.sep_conv2.block.pointwise.weight  | block4.sep_conv2.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block4.sep_conv3.block.bn_depth.*        | block4.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block4.sep_conv3.block.bn_point.*        | block4.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block4.sep_conv3.block.depthwise.weight  | block4.sep_conv3.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block4.sep_conv3.block.pointwise.weight  | block4.sep_conv3.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block5.sep_conv1.block.bn_depth.*        | block5.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block5.sep_conv1.block.bn_point.*        | block5.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block5.sep_conv1.block.depthwise.weight  | block5.sep_conv1.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block5.sep_conv1.block.pointwise.weight  | block5.sep_conv1.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block5.sep_conv2.block.bn_depth.*        | block5.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block5.sep_conv2.block.bn_point.*        | block5.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block5.sep_conv2.block.depthwise.weight  | block5.sep_conv2.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block5.sep_conv2.block.pointwise.weight  | block5.sep_conv2.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block5.sep_conv3.block.bn_depth.*        | block5.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block5.sep_conv3.block.bn_point.*        | block5.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block5.sep_conv3.block.depthwise.weight  | block5.sep_conv3.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block5.sep_conv3.block.pointwise.weight  | block5.sep_conv3.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block6.sep_conv1.block.bn_depth.*        | block6.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block6.sep_conv1.block.bn_point.*        | block6.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block6.sep_conv1.block.depthwise.weight  | block6.sep_conv1.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block6.sep_conv1.block.pointwise.weight  | block6.sep_conv1.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block6.sep_conv2.block.bn_depth.*        | block6.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block6.sep_conv2.block.bn_point.*        | block6.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block6.sep_conv2.block.depthwise.weight  | block6.sep_conv2.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block6.sep_conv2.block.pointwise.weight  | block6.sep_conv2.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block6.sep_conv3.block.bn_depth.*        | block6.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block6.sep_conv3.block.bn_point.*        | block6.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block6.sep_conv3.block.depthwise.weight  | block6.sep_conv3.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block6.sep_conv3.block.pointwise.weight  | block6.sep_conv3.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block7.sep_conv1.block.bn_depth.*        | block7.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block7.sep_conv1.block.bn_point.*        | block7.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block7.sep_conv1.block.depthwise.weight  | block7.sep_conv1.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block7.sep_conv1.block.pointwise.weight  | block7.sep_conv1.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block7.sep_conv2.block.bn_depth.*        | block7.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block7.sep_conv2.block.bn_point.*        | block7.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block7.sep_conv2.block.depthwise.weight  | block7.sep_conv2.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block7.sep_conv2.block.pointwise.weight  | block7.sep_conv2.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block7.sep_conv3.block.bn_depth.*        | block7.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block7.sep_conv3.block.bn_point.*        | block7.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block7.sep_conv3.block.depthwise.weight  | block7.sep_conv3.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block7.sep_conv3.block.pointwise.weight  | block7.sep_conv3.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block8.sep_conv1.block.bn_depth.*        | block8.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block8.sep_conv1.block.bn_point.*        | block8.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block8.sep_conv1.block.depthwise.weight  | block8.sep_conv1.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block8.sep_conv1.block.pointwise.weight  | block8.sep_conv1.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block8.sep_conv2.block.bn_depth.*        | block8.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block8.sep_conv2.block.bn_point.*        | block8.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block8.sep_conv2.block.depthwise.weight  | block8.sep_conv2.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block8.sep_conv2.block.pointwise.weight  | block8.sep_conv2.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block8.sep_conv3.block.bn_depth.*        | block8.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block8.sep_conv3.block.bn_point.*        | block8.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block8.sep_conv3.block.depthwise.weight  | block8.sep_conv3.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block8.sep_conv3.block.pointwise.weight  | block8.sep_conv3.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block9.sep_conv1.block.bn_depth.*        | block9.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block9.sep_conv1.block.bn_point.*        | block9.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block9.sep_conv1.block.depthwise.weight  | block9.sep_conv1.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block9.sep_conv1.block.pointwise.weight  | block9.sep_conv1.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block9.sep_conv2.block.bn_depth.*        | block9.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block9.sep_conv2.block.bn_point.*        | block9.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block9.sep_conv2.block.depthwise.weight  | block9.sep_conv2.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block9.sep_conv2.block.pointwise.weight  | block9.sep_conv2.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| block9.sep_conv3.block.bn_depth.*        | block9.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block9.sep_conv3.block.bn_point.*        | block9.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}  | (728,) () (728,) (728,) (728,)     |
| block9.sep_conv3.block.depthwise.weight  | block9.sep_conv3.block.depthwise.weight                                                     | (728, 1, 3, 3)                     |
| block9.sep_conv3.block.pointwise.weight  | block9.sep_conv3.block.pointwise.weight                                                     | (728, 728, 1, 1)                   |
| bn1.*                                    | bn1.{bias,num_batches_tracked,running_mean,running_var,weight}                              | (32,) () (32,) (32,) (32,)         |
| bn2.*                                    | bn2.{bias,num_batches_tracked,running_mean,running_var,weight}                              | (64,) () (64,) (64,) (64,)         |
| conv1.weight                             | conv1.weight                                                                                | (32, 3, 3, 3)                      |
| conv2.weight                             | conv2.weight                                                                                | (64, 32, 3, 3)                     |
[08/19 14:31:06] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mins_embed_head.center_head.0.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.center_head.0.weight[0m
[34mins_embed_head.center_head.1.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.center_head.1.weight[0m
[34mins_embed_head.center_predictor.{bias, weight}[0m
[34mins_embed_head.decoder.res2.fuse_conv.0.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res2.fuse_conv.0.weight[0m
[34mins_embed_head.decoder.res2.fuse_conv.1.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res2.fuse_conv.1.weight[0m
[34mins_embed_head.decoder.res2.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res2.project_conv.weight[0m
[34mins_embed_head.decoder.res3.fuse_conv.0.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res3.fuse_conv.0.weight[0m
[34mins_embed_head.decoder.res3.fuse_conv.1.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res3.fuse_conv.1.weight[0m
[34mins_embed_head.decoder.res3.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res3.project_conv.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.0.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.0.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.1.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.1.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.2.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.2.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.3.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.3.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.4.1.{bias, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.project.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.project.weight[0m
[34mins_embed_head.offset_head.0.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.offset_head.0.weight[0m
[34mins_embed_head.offset_head.1.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.offset_head.1.weight[0m
[34mins_embed_head.offset_predictor.{bias, weight}[0m
[34msem_seg_head.decoder.res2.fuse_conv.0.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res2.fuse_conv.0.weight[0m
[34msem_seg_head.decoder.res2.fuse_conv.1.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res2.fuse_conv.1.weight[0m
[34msem_seg_head.decoder.res2.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res2.project_conv.weight[0m
[34msem_seg_head.decoder.res3.fuse_conv.0.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res3.fuse_conv.0.weight[0m
[34msem_seg_head.decoder.res3.fuse_conv.1.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res3.fuse_conv.1.weight[0m
[34msem_seg_head.decoder.res3.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res3.project_conv.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.0.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.0.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.1.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.1.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.2.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.2.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.3.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.3.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.4.1.{bias, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.project.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.project.weight[0m
[34msem_seg_head.head.0.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.head.0.weight[0m
[34msem_seg_head.head.1.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.head.1.weight[0m
[34msem_seg_head.predictor.{bias, weight}[0m
[08/19 14:31:06] detectron2.engine.train_loop INFO: Starting training from iteration 0
[08/19 14:31:56] detectron2.engine.hooks INFO: Overall training speed: 37 iterations in 0:00:28 (0.7773 s / it)
[08/19 14:31:56] detectron2.engine.hooks INFO: Total training time: 0:00:28 (0:00:00 on hooks)
[08/19 14:32:36] detectron2 INFO: Rank of current process: 5. World size: 8
[08/19 14:32:51] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.12 | packaged by conda-forge | (default, Oct 26 2021, 06:08:53) [GCC 9.4.0]
numpy                   1.19.5
detectron2              0.6 @/opt/conda/lib/python3.7/site-packages/detectron2
detectron2._C           not built correctly: /opt/conda/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so: undefined symbol: _ZNK2at6Tensor4add_ERKS0_RKN3c106ScalarE
Compiler ($CXX)         c++ (Debian 8.3.0-6) 8.3.0
CUDA compiler           Build cuda_11.3.r11.3/compiler.29920130_0
detectron2 arch flags   7.0
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.8.1+cu111 @/opt/conda/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1,2,3,4,5,6,7     NVIDIA A100-SXM4-40GB (arch=8.0)
Driver version          495.46
CUDA_HOME               /usr/local/cuda
Pillow                  9.1.1
torchvision             0.9.1+cu111 @/opt/conda/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20220512
iopath                  0.1.9
cv2                     4.6.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[08/19 14:32:51] detectron2 INFO: Command line arguments: Namespace(config_file='configs/Cityscapes-PanopticSegmentation/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=8, num_machines=1, opts=['OUTPUT_DIR', 'output/'], resume=True)
[08/19 14:32:51] detectron2 INFO: Contents of args.config_file=configs/Cityscapes-PanopticSegmentation/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBase-PanopticDeepLab-OS16.yaml[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mx65.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186md2_xception_65[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mSyncBN[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m90000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(512,[39m[38;5;141m [39m[38;5;141m1024)[39m

[08/19 14:32:51] detectron2.utils.env INFO: Using a generated random seed 51985517
[08/19 14:32:52] detectron2.engine.defaults INFO: Model:
PanopticDeepLab(
  (backbone): d2_xception_65(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
    (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (block1): XceptionBlock(
      (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
          (bn_depth): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn_depth): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn_depth): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block2): XceptionBlock(
      (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn_depth): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (bn_depth): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)
          (bn_depth): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block3): XceptionBlock(
      (conv): Conv2d(256, 728, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (bn_depth): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block4): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block5): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block6): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block7): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block8): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block9): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block10): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block11): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block12): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block13): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block14): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block15): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block16): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block17): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block18): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block19): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block20): XceptionBlock(
      (conv): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024, bias=False)
          (bn_depth): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block21): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1024, bias=False)
          (bn_depth): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1024, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1536, bias=False)
          (bn_depth): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1536, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1536, bias=False)
          (bn_depth): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1536, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
    )
  )
  (sem_seg_head): PanopticDeepLabSemSegHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            288, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          728, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            320, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (2): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (3): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(32, 64), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (head): Sequential(
      (0): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (predictor): Conv2d(256, 19, kernel_size=(1, 1), stride=(1, 1))
    (loss): DeepLabCE(
      (criterion): CrossEntropyLoss()
    )
  )
  (ins_embed_head): PanopticDeepLabInsEmbedHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            160, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          728, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            320, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (2): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (3): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(32, 64), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (center_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (center_predictor): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
    (offset_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (offset_predictor): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
    (center_loss): MSELoss()
    (offset_loss): L1Loss()
  )
)
[08/19 14:32:53] detectron2.projects.panoptic_deeplab.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=..., max_size=4096, sample_style='choice'), RandomCrop(crop_type='absolute', crop_size=[512, 1024]), RandomFlip()]
[08/19 14:32:53] detectron2.data.datasets.cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/19 14:32:53] detectron2.data.build INFO: Using training sampler TrainingSampler
[08/19 14:32:53] detectron2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/19 14:32:53] detectron2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/19 14:32:53] fvcore.common.checkpoint INFO: [Checkpointer] Loading from output/model_final.pth ...
[08/19 14:34:21] detectron2 INFO: Rank of current process: 5. World size: 8
[08/19 14:34:33] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.12 | packaged by conda-forge | (default, Oct 26 2021, 06:08:53) [GCC 9.4.0]
numpy                   1.19.5
detectron2              0.6 @/opt/conda/lib/python3.7/site-packages/detectron2
detectron2._C           not built correctly: /opt/conda/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so: undefined symbol: _ZNK2at6Tensor4add_ERKS0_RKN3c106ScalarE
Compiler ($CXX)         c++ (Debian 8.3.0-6) 8.3.0
CUDA compiler           Build cuda_11.3.r11.3/compiler.29920130_0
detectron2 arch flags   7.0
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.8.1+cu111 @/opt/conda/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1,2,3,4,5,6,7     NVIDIA A100-SXM4-40GB (arch=8.0)
Driver version          495.46
CUDA_HOME               /usr/local/cuda
Pillow                  9.1.1
torchvision             0.9.1+cu111 @/opt/conda/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20220512
iopath                  0.1.9
cv2                     4.6.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[08/19 14:34:33] detectron2 INFO: Command line arguments: Namespace(config_file='configs/Cityscapes-PanopticSegmentation/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=8, num_machines=1, opts=['OUTPUT_DIR', 'output/'], resume=True)
[08/19 14:34:33] detectron2 INFO: Contents of args.config_file=configs/Cityscapes-PanopticSegmentation/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBase-PanopticDeepLab-OS16.yaml[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mx65.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m128[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186md2_xception_65[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mSyncBN[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m90000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(512,[39m[38;5;141m [39m[38;5;141m1024)[39m

[08/19 14:34:33] detectron2.utils.env INFO: Using a generated random seed 33958778
[08/19 14:34:36] detectron2.engine.defaults INFO: Model:
PanopticDeepLab(
  (backbone): d2_xception_65(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
    (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (block1): XceptionBlock(
      (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
          (bn_depth): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn_depth): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn_depth): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block2): XceptionBlock(
      (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn_depth): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (bn_depth): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)
          (bn_depth): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block3): XceptionBlock(
      (conv): Conv2d(256, 728, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (bn_depth): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block4): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block5): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block6): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block7): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block8): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block9): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block10): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block11): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block12): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block13): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block14): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block15): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block16): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block17): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block18): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block19): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block20): XceptionBlock(
      (conv): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): SyncBatchNorm(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024, bias=False)
          (bn_depth): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block21): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1024, bias=False)
          (bn_depth): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1024, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1536, bias=False)
          (bn_depth): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1536, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1536, bias=False)
          (bn_depth): SyncBatchNorm(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1536, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
    )
  )
  (sem_seg_head): PanopticDeepLabSemSegHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            288, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          728, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            320, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (2): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (3): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(32, 64), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (head): Sequential(
      (0): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (predictor): Conv2d(256, 19, kernel_size=(1, 1), stride=(1, 1))
    (loss): DeepLabCE(
      (criterion): CrossEntropyLoss()
    )
  )
  (ins_embed_head): PanopticDeepLabInsEmbedHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            160, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          728, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            320, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (2): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (3): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(32, 64), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (center_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (center_predictor): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
    (offset_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (offset_predictor): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
    (center_loss): MSELoss()
    (offset_loss): L1Loss()
  )
)
[08/19 14:34:36] detectron2.projects.panoptic_deeplab.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=..., max_size=4096, sample_style='choice'), RandomCrop(crop_type='absolute', crop_size=[512, 1024]), RandomFlip()]
[08/19 14:34:36] detectron2.data.datasets.cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/19 14:34:36] detectron2.data.build INFO: Using training sampler TrainingSampler
[08/19 14:34:38] detectron2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/19 14:34:38] detectron2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/19 14:34:38] fvcore.common.checkpoint INFO: [Checkpointer] Loading from output/model_0089999.pth ...
[08/19 14:34:42] detectron2.checkpoint.c2_model_loading INFO: Following weights matched with model:
| Names in Model                                       | Names in Checkpoint                                                                                                                         | Shapes                                        |
|:-----------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------|
| backbone.block1.bn.*                                 | backbone.block1.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                                                               | (128,) () (128,) (128,) (128,)                |
| backbone.block1.conv.weight                          | backbone.block1.conv.weight                                                                                                                 | (128, 64, 1, 1)                               |
| backbone.block1.sep_conv1.block.bn_depth.*           | backbone.block1.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (64,) () (64,) (64,) (64,)                    |
| backbone.block1.sep_conv1.block.bn_point.*           | backbone.block1.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (128,) () (128,) (128,) (128,)                |
| backbone.block1.sep_conv1.block.depthwise.weight     | backbone.block1.sep_conv1.block.depthwise.weight                                                                                            | (64, 1, 3, 3)                                 |
| backbone.block1.sep_conv1.block.pointwise.weight     | backbone.block1.sep_conv1.block.pointwise.weight                                                                                            | (128, 64, 1, 1)                               |
| backbone.block1.sep_conv2.block.bn_depth.*           | backbone.block1.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (128,) () (128,) (128,) (128,)                |
| backbone.block1.sep_conv2.block.bn_point.*           | backbone.block1.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (128,) () (128,) (128,) (128,)                |
| backbone.block1.sep_conv2.block.depthwise.weight     | backbone.block1.sep_conv2.block.depthwise.weight                                                                                            | (128, 1, 3, 3)                                |
| backbone.block1.sep_conv2.block.pointwise.weight     | backbone.block1.sep_conv2.block.pointwise.weight                                                                                            | (128, 128, 1, 1)                              |
| backbone.block1.sep_conv3.block.bn_depth.*           | backbone.block1.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (128,) () (128,) (128,) (128,)                |
| backbone.block1.sep_conv3.block.bn_point.*           | backbone.block1.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (128,) () (128,) (128,) (128,)                |
| backbone.block1.sep_conv3.block.depthwise.weight     | backbone.block1.sep_conv3.block.depthwise.weight                                                                                            | (128, 1, 3, 3)                                |
| backbone.block1.sep_conv3.block.pointwise.weight     | backbone.block1.sep_conv3.block.pointwise.weight                                                                                            | (128, 128, 1, 1)                              |
| backbone.block10.sep_conv1.block.bn_depth.*          | backbone.block10.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block10.sep_conv1.block.bn_point.*          | backbone.block10.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block10.sep_conv1.block.depthwise.weight    | backbone.block10.sep_conv1.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block10.sep_conv1.block.pointwise.weight    | backbone.block10.sep_conv1.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block10.sep_conv2.block.bn_depth.*          | backbone.block10.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block10.sep_conv2.block.bn_point.*          | backbone.block10.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block10.sep_conv2.block.depthwise.weight    | backbone.block10.sep_conv2.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block10.sep_conv2.block.pointwise.weight    | backbone.block10.sep_conv2.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block10.sep_conv3.block.bn_depth.*          | backbone.block10.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block10.sep_conv3.block.bn_point.*          | backbone.block10.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block10.sep_conv3.block.depthwise.weight    | backbone.block10.sep_conv3.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block10.sep_conv3.block.pointwise.weight    | backbone.block10.sep_conv3.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block11.sep_conv1.block.bn_depth.*          | backbone.block11.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block11.sep_conv1.block.bn_point.*          | backbone.block11.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block11.sep_conv1.block.depthwise.weight    | backbone.block11.sep_conv1.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block11.sep_conv1.block.pointwise.weight    | backbone.block11.sep_conv1.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block11.sep_conv2.block.bn_depth.*          | backbone.block11.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block11.sep_conv2.block.bn_point.*          | backbone.block11.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block11.sep_conv2.block.depthwise.weight    | backbone.block11.sep_conv2.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block11.sep_conv2.block.pointwise.weight    | backbone.block11.sep_conv2.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block11.sep_conv3.block.bn_depth.*          | backbone.block11.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block11.sep_conv3.block.bn_point.*          | backbone.block11.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block11.sep_conv3.block.depthwise.weight    | backbone.block11.sep_conv3.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block11.sep_conv3.block.pointwise.weight    | backbone.block11.sep_conv3.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block12.sep_conv1.block.bn_depth.*          | backbone.block12.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block12.sep_conv1.block.bn_point.*          | backbone.block12.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block12.sep_conv1.block.depthwise.weight    | backbone.block12.sep_conv1.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block12.sep_conv1.block.pointwise.weight    | backbone.block12.sep_conv1.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block12.sep_conv2.block.bn_depth.*          | backbone.block12.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block12.sep_conv2.block.bn_point.*          | backbone.block12.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block12.sep_conv2.block.depthwise.weight    | backbone.block12.sep_conv2.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block12.sep_conv2.block.pointwise.weight    | backbone.block12.sep_conv2.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block12.sep_conv3.block.bn_depth.*          | backbone.block12.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block12.sep_conv3.block.bn_point.*          | backbone.block12.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block12.sep_conv3.block.depthwise.weight    | backbone.block12.sep_conv3.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block12.sep_conv3.block.pointwise.weight    | backbone.block12.sep_conv3.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block13.sep_conv1.block.bn_depth.*          | backbone.block13.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block13.sep_conv1.block.bn_point.*          | backbone.block13.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block13.sep_conv1.block.depthwise.weight    | backbone.block13.sep_conv1.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block13.sep_conv1.block.pointwise.weight    | backbone.block13.sep_conv1.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block13.sep_conv2.block.bn_depth.*          | backbone.block13.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block13.sep_conv2.block.bn_point.*          | backbone.block13.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block13.sep_conv2.block.depthwise.weight    | backbone.block13.sep_conv2.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block13.sep_conv2.block.pointwise.weight    | backbone.block13.sep_conv2.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block13.sep_conv3.block.bn_depth.*          | backbone.block13.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block13.sep_conv3.block.bn_point.*          | backbone.block13.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block13.sep_conv3.block.depthwise.weight    | backbone.block13.sep_conv3.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block13.sep_conv3.block.pointwise.weight    | backbone.block13.sep_conv3.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block14.sep_conv1.block.bn_depth.*          | backbone.block14.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block14.sep_conv1.block.bn_point.*          | backbone.block14.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block14.sep_conv1.block.depthwise.weight    | backbone.block14.sep_conv1.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block14.sep_conv1.block.pointwise.weight    | backbone.block14.sep_conv1.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block14.sep_conv2.block.bn_depth.*          | backbone.block14.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block14.sep_conv2.block.bn_point.*          | backbone.block14.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block14.sep_conv2.block.depthwise.weight    | backbone.block14.sep_conv2.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block14.sep_conv2.block.pointwise.weight    | backbone.block14.sep_conv2.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block14.sep_conv3.block.bn_depth.*          | backbone.block14.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block14.sep_conv3.block.bn_point.*          | backbone.block14.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block14.sep_conv3.block.depthwise.weight    | backbone.block14.sep_conv3.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block14.sep_conv3.block.pointwise.weight    | backbone.block14.sep_conv3.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block15.sep_conv1.block.bn_depth.*          | backbone.block15.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block15.sep_conv1.block.bn_point.*          | backbone.block15.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block15.sep_conv1.block.depthwise.weight    | backbone.block15.sep_conv1.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block15.sep_conv1.block.pointwise.weight    | backbone.block15.sep_conv1.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block15.sep_conv2.block.bn_depth.*          | backbone.block15.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block15.sep_conv2.block.bn_point.*          | backbone.block15.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block15.sep_conv2.block.depthwise.weight    | backbone.block15.sep_conv2.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block15.sep_conv2.block.pointwise.weight    | backbone.block15.sep_conv2.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block15.sep_conv3.block.bn_depth.*          | backbone.block15.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block15.sep_conv3.block.bn_point.*          | backbone.block15.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block15.sep_conv3.block.depthwise.weight    | backbone.block15.sep_conv3.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block15.sep_conv3.block.pointwise.weight    | backbone.block15.sep_conv3.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block16.sep_conv1.block.bn_depth.*          | backbone.block16.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block16.sep_conv1.block.bn_point.*          | backbone.block16.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block16.sep_conv1.block.depthwise.weight    | backbone.block16.sep_conv1.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block16.sep_conv1.block.pointwise.weight    | backbone.block16.sep_conv1.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block16.sep_conv2.block.bn_depth.*          | backbone.block16.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block16.sep_conv2.block.bn_point.*          | backbone.block16.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block16.sep_conv2.block.depthwise.weight    | backbone.block16.sep_conv2.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block16.sep_conv2.block.pointwise.weight    | backbone.block16.sep_conv2.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block16.sep_conv3.block.bn_depth.*          | backbone.block16.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block16.sep_conv3.block.bn_point.*          | backbone.block16.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block16.sep_conv3.block.depthwise.weight    | backbone.block16.sep_conv3.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block16.sep_conv3.block.pointwise.weight    | backbone.block16.sep_conv3.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block17.sep_conv1.block.bn_depth.*          | backbone.block17.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block17.sep_conv1.block.bn_point.*          | backbone.block17.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block17.sep_conv1.block.depthwise.weight    | backbone.block17.sep_conv1.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block17.sep_conv1.block.pointwise.weight    | backbone.block17.sep_conv1.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block17.sep_conv2.block.bn_depth.*          | backbone.block17.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block17.sep_conv2.block.bn_point.*          | backbone.block17.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block17.sep_conv2.block.depthwise.weight    | backbone.block17.sep_conv2.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block17.sep_conv2.block.pointwise.weight    | backbone.block17.sep_conv2.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block17.sep_conv3.block.bn_depth.*          | backbone.block17.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block17.sep_conv3.block.bn_point.*          | backbone.block17.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block17.sep_conv3.block.depthwise.weight    | backbone.block17.sep_conv3.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block17.sep_conv3.block.pointwise.weight    | backbone.block17.sep_conv3.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block18.sep_conv1.block.bn_depth.*          | backbone.block18.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block18.sep_conv1.block.bn_point.*          | backbone.block18.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block18.sep_conv1.block.depthwise.weight    | backbone.block18.sep_conv1.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block18.sep_conv1.block.pointwise.weight    | backbone.block18.sep_conv1.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block18.sep_conv2.block.bn_depth.*          | backbone.block18.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block18.sep_conv2.block.bn_point.*          | backbone.block18.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block18.sep_conv2.block.depthwise.weight    | backbone.block18.sep_conv2.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block18.sep_conv2.block.pointwise.weight    | backbone.block18.sep_conv2.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block18.sep_conv3.block.bn_depth.*          | backbone.block18.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block18.sep_conv3.block.bn_point.*          | backbone.block18.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block18.sep_conv3.block.depthwise.weight    | backbone.block18.sep_conv3.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block18.sep_conv3.block.pointwise.weight    | backbone.block18.sep_conv3.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block19.sep_conv1.block.bn_depth.*          | backbone.block19.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block19.sep_conv1.block.bn_point.*          | backbone.block19.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block19.sep_conv1.block.depthwise.weight    | backbone.block19.sep_conv1.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block19.sep_conv1.block.pointwise.weight    | backbone.block19.sep_conv1.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block19.sep_conv2.block.bn_depth.*          | backbone.block19.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block19.sep_conv2.block.bn_point.*          | backbone.block19.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block19.sep_conv2.block.depthwise.weight    | backbone.block19.sep_conv2.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block19.sep_conv2.block.pointwise.weight    | backbone.block19.sep_conv2.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block19.sep_conv3.block.bn_depth.*          | backbone.block19.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block19.sep_conv3.block.bn_point.*          | backbone.block19.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block19.sep_conv3.block.depthwise.weight    | backbone.block19.sep_conv3.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block19.sep_conv3.block.pointwise.weight    | backbone.block19.sep_conv3.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block2.bn.*                                 | backbone.block2.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                                                               | (256,) () (256,) (256,) (256,)                |
| backbone.block2.conv.weight                          | backbone.block2.conv.weight                                                                                                                 | (256, 128, 1, 1)                              |
| backbone.block2.sep_conv1.block.bn_depth.*           | backbone.block2.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (128,) () (128,) (128,) (128,)                |
| backbone.block2.sep_conv1.block.bn_point.*           | backbone.block2.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (256,) () (256,) (256,) (256,)                |
| backbone.block2.sep_conv1.block.depthwise.weight     | backbone.block2.sep_conv1.block.depthwise.weight                                                                                            | (128, 1, 3, 3)                                |
| backbone.block2.sep_conv1.block.pointwise.weight     | backbone.block2.sep_conv1.block.pointwise.weight                                                                                            | (256, 128, 1, 1)                              |
| backbone.block2.sep_conv2.block.bn_depth.*           | backbone.block2.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (256,) () (256,) (256,) (256,)                |
| backbone.block2.sep_conv2.block.bn_point.*           | backbone.block2.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (256,) () (256,) (256,) (256,)                |
| backbone.block2.sep_conv2.block.depthwise.weight     | backbone.block2.sep_conv2.block.depthwise.weight                                                                                            | (256, 1, 3, 3)                                |
| backbone.block2.sep_conv2.block.pointwise.weight     | backbone.block2.sep_conv2.block.pointwise.weight                                                                                            | (256, 256, 1, 1)                              |
| backbone.block2.sep_conv3.block.bn_depth.*           | backbone.block2.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (256,) () (256,) (256,) (256,)                |
| backbone.block2.sep_conv3.block.bn_point.*           | backbone.block2.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (256,) () (256,) (256,) (256,)                |
| backbone.block2.sep_conv3.block.depthwise.weight     | backbone.block2.sep_conv3.block.depthwise.weight                                                                                            | (256, 1, 3, 3)                                |
| backbone.block2.sep_conv3.block.pointwise.weight     | backbone.block2.sep_conv3.block.pointwise.weight                                                                                            | (256, 256, 1, 1)                              |
| backbone.block20.bn.*                                | backbone.block20.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                                                              | (1024,) () (1024,) (1024,) (1024,)            |
| backbone.block20.conv.weight                         | backbone.block20.conv.weight                                                                                                                | (1024, 728, 1, 1)                             |
| backbone.block20.sep_conv1.block.bn_depth.*          | backbone.block20.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block20.sep_conv1.block.bn_point.*          | backbone.block20.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block20.sep_conv1.block.depthwise.weight    | backbone.block20.sep_conv1.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block20.sep_conv1.block.pointwise.weight    | backbone.block20.sep_conv1.block.pointwise.weight                                                                                           | (728, 728, 1, 1)                              |
| backbone.block20.sep_conv2.block.bn_depth.*          | backbone.block20.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (728,) () (728,) (728,) (728,)                |
| backbone.block20.sep_conv2.block.bn_point.*          | backbone.block20.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (1024,) () (1024,) (1024,) (1024,)            |
| backbone.block20.sep_conv2.block.depthwise.weight    | backbone.block20.sep_conv2.block.depthwise.weight                                                                                           | (728, 1, 3, 3)                                |
| backbone.block20.sep_conv2.block.pointwise.weight    | backbone.block20.sep_conv2.block.pointwise.weight                                                                                           | (1024, 728, 1, 1)                             |
| backbone.block20.sep_conv3.block.bn_depth.*          | backbone.block20.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (1024,) () (1024,) (1024,) (1024,)            |
| backbone.block20.sep_conv3.block.bn_point.*          | backbone.block20.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (1024,) () (1024,) (1024,) (1024,)            |
| backbone.block20.sep_conv3.block.depthwise.weight    | backbone.block20.sep_conv3.block.depthwise.weight                                                                                           | (1024, 1, 3, 3)                               |
| backbone.block20.sep_conv3.block.pointwise.weight    | backbone.block20.sep_conv3.block.pointwise.weight                                                                                           | (1024, 1024, 1, 1)                            |
| backbone.block21.sep_conv1.block.bn_depth.*          | backbone.block21.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (1024,) () (1024,) (1024,) (1024,)            |
| backbone.block21.sep_conv1.block.bn_point.*          | backbone.block21.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (1536,) () (1536,) (1536,) (1536,)            |
| backbone.block21.sep_conv1.block.depthwise.weight    | backbone.block21.sep_conv1.block.depthwise.weight                                                                                           | (1024, 1, 3, 3)                               |
| backbone.block21.sep_conv1.block.pointwise.weight    | backbone.block21.sep_conv1.block.pointwise.weight                                                                                           | (1536, 1024, 1, 1)                            |
| backbone.block21.sep_conv2.block.bn_depth.*          | backbone.block21.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (1536,) () (1536,) (1536,) (1536,)            |
| backbone.block21.sep_conv2.block.bn_point.*          | backbone.block21.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (1536,) () (1536,) (1536,) (1536,)            |
| backbone.block21.sep_conv2.block.depthwise.weight    | backbone.block21.sep_conv2.block.depthwise.weight                                                                                           | (1536, 1, 3, 3)                               |
| backbone.block21.sep_conv2.block.pointwise.weight    | backbone.block21.sep_conv2.block.pointwise.weight                                                                                           | (1536, 1536, 1, 1)                            |
| backbone.block21.sep_conv3.block.bn_depth.*          | backbone.block21.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (1536,) () (1536,) (1536,) (1536,)            |
| backbone.block21.sep_conv3.block.bn_point.*          | backbone.block21.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                        | (2048,) () (2048,) (2048,) (2048,)            |
| backbone.block21.sep_conv3.block.depthwise.weight    | backbone.block21.sep_conv3.block.depthwise.weight                                                                                           | (1536, 1, 3, 3)                               |
| backbone.block21.sep_conv3.block.pointwise.weight    | backbone.block21.sep_conv3.block.pointwise.weight                                                                                           | (2048, 1536, 1, 1)                            |
| backbone.block3.bn.*                                 | backbone.block3.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                                                               | (728,) () (728,) (728,) (728,)                |
| backbone.block3.conv.weight                          | backbone.block3.conv.weight                                                                                                                 | (728, 256, 1, 1)                              |
| backbone.block3.sep_conv1.block.bn_depth.*           | backbone.block3.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (256,) () (256,) (256,) (256,)                |
| backbone.block3.sep_conv1.block.bn_point.*           | backbone.block3.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block3.sep_conv1.block.depthwise.weight     | backbone.block3.sep_conv1.block.depthwise.weight                                                                                            | (256, 1, 3, 3)                                |
| backbone.block3.sep_conv1.block.pointwise.weight     | backbone.block3.sep_conv1.block.pointwise.weight                                                                                            | (728, 256, 1, 1)                              |
| backbone.block3.sep_conv2.block.bn_depth.*           | backbone.block3.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block3.sep_conv2.block.bn_point.*           | backbone.block3.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block3.sep_conv2.block.depthwise.weight     | backbone.block3.sep_conv2.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block3.sep_conv2.block.pointwise.weight     | backbone.block3.sep_conv2.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block3.sep_conv3.block.bn_depth.*           | backbone.block3.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block3.sep_conv3.block.bn_point.*           | backbone.block3.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block3.sep_conv3.block.depthwise.weight     | backbone.block3.sep_conv3.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block3.sep_conv3.block.pointwise.weight     | backbone.block3.sep_conv3.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block4.sep_conv1.block.bn_depth.*           | backbone.block4.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block4.sep_conv1.block.bn_point.*           | backbone.block4.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block4.sep_conv1.block.depthwise.weight     | backbone.block4.sep_conv1.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block4.sep_conv1.block.pointwise.weight     | backbone.block4.sep_conv1.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block4.sep_conv2.block.bn_depth.*           | backbone.block4.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block4.sep_conv2.block.bn_point.*           | backbone.block4.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block4.sep_conv2.block.depthwise.weight     | backbone.block4.sep_conv2.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block4.sep_conv2.block.pointwise.weight     | backbone.block4.sep_conv2.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block4.sep_conv3.block.bn_depth.*           | backbone.block4.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block4.sep_conv3.block.bn_point.*           | backbone.block4.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block4.sep_conv3.block.depthwise.weight     | backbone.block4.sep_conv3.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block4.sep_conv3.block.pointwise.weight     | backbone.block4.sep_conv3.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block5.sep_conv1.block.bn_depth.*           | backbone.block5.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block5.sep_conv1.block.bn_point.*           | backbone.block5.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block5.sep_conv1.block.depthwise.weight     | backbone.block5.sep_conv1.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block5.sep_conv1.block.pointwise.weight     | backbone.block5.sep_conv1.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block5.sep_conv2.block.bn_depth.*           | backbone.block5.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block5.sep_conv2.block.bn_point.*           | backbone.block5.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block5.sep_conv2.block.depthwise.weight     | backbone.block5.sep_conv2.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block5.sep_conv2.block.pointwise.weight     | backbone.block5.sep_conv2.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block5.sep_conv3.block.bn_depth.*           | backbone.block5.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block5.sep_conv3.block.bn_point.*           | backbone.block5.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block5.sep_conv3.block.depthwise.weight     | backbone.block5.sep_conv3.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block5.sep_conv3.block.pointwise.weight     | backbone.block5.sep_conv3.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block6.sep_conv1.block.bn_depth.*           | backbone.block6.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block6.sep_conv1.block.bn_point.*           | backbone.block6.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block6.sep_conv1.block.depthwise.weight     | backbone.block6.sep_conv1.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block6.sep_conv1.block.pointwise.weight     | backbone.block6.sep_conv1.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block6.sep_conv2.block.bn_depth.*           | backbone.block6.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block6.sep_conv2.block.bn_point.*           | backbone.block6.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block6.sep_conv2.block.depthwise.weight     | backbone.block6.sep_conv2.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block6.sep_conv2.block.pointwise.weight     | backbone.block6.sep_conv2.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block6.sep_conv3.block.bn_depth.*           | backbone.block6.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block6.sep_conv3.block.bn_point.*           | backbone.block6.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block6.sep_conv3.block.depthwise.weight     | backbone.block6.sep_conv3.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block6.sep_conv3.block.pointwise.weight     | backbone.block6.sep_conv3.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block7.sep_conv1.block.bn_depth.*           | backbone.block7.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block7.sep_conv1.block.bn_point.*           | backbone.block7.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block7.sep_conv1.block.depthwise.weight     | backbone.block7.sep_conv1.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block7.sep_conv1.block.pointwise.weight     | backbone.block7.sep_conv1.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block7.sep_conv2.block.bn_depth.*           | backbone.block7.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block7.sep_conv2.block.bn_point.*           | backbone.block7.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block7.sep_conv2.block.depthwise.weight     | backbone.block7.sep_conv2.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block7.sep_conv2.block.pointwise.weight     | backbone.block7.sep_conv2.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block7.sep_conv3.block.bn_depth.*           | backbone.block7.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block7.sep_conv3.block.bn_point.*           | backbone.block7.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block7.sep_conv3.block.depthwise.weight     | backbone.block7.sep_conv3.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block7.sep_conv3.block.pointwise.weight     | backbone.block7.sep_conv3.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block8.sep_conv1.block.bn_depth.*           | backbone.block8.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block8.sep_conv1.block.bn_point.*           | backbone.block8.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block8.sep_conv1.block.depthwise.weight     | backbone.block8.sep_conv1.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block8.sep_conv1.block.pointwise.weight     | backbone.block8.sep_conv1.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block8.sep_conv2.block.bn_depth.*           | backbone.block8.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block8.sep_conv2.block.bn_point.*           | backbone.block8.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block8.sep_conv2.block.depthwise.weight     | backbone.block8.sep_conv2.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block8.sep_conv2.block.pointwise.weight     | backbone.block8.sep_conv2.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block8.sep_conv3.block.bn_depth.*           | backbone.block8.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block8.sep_conv3.block.bn_point.*           | backbone.block8.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block8.sep_conv3.block.depthwise.weight     | backbone.block8.sep_conv3.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block8.sep_conv3.block.pointwise.weight     | backbone.block8.sep_conv3.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block9.sep_conv1.block.bn_depth.*           | backbone.block9.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block9.sep_conv1.block.bn_point.*           | backbone.block9.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block9.sep_conv1.block.depthwise.weight     | backbone.block9.sep_conv1.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block9.sep_conv1.block.pointwise.weight     | backbone.block9.sep_conv1.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block9.sep_conv2.block.bn_depth.*           | backbone.block9.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block9.sep_conv2.block.bn_point.*           | backbone.block9.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block9.sep_conv2.block.depthwise.weight     | backbone.block9.sep_conv2.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block9.sep_conv2.block.pointwise.weight     | backbone.block9.sep_conv2.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.block9.sep_conv3.block.bn_depth.*           | backbone.block9.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block9.sep_conv3.block.bn_point.*           | backbone.block9.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                         | (728,) () (728,) (728,) (728,)                |
| backbone.block9.sep_conv3.block.depthwise.weight     | backbone.block9.sep_conv3.block.depthwise.weight                                                                                            | (728, 1, 3, 3)                                |
| backbone.block9.sep_conv3.block.pointwise.weight     | backbone.block9.sep_conv3.block.pointwise.weight                                                                                            | (728, 728, 1, 1)                              |
| backbone.bn1.*                                       | backbone.bn1.{bias,num_batches_tracked,running_mean,running_var,weight}                                                                     | (32,) () (32,) (32,) (32,)                    |
| backbone.bn2.*                                       | backbone.bn2.{bias,num_batches_tracked,running_mean,running_var,weight}                                                                     | (64,) () (64,) (64,) (64,)                    |
| backbone.conv1.weight                                | backbone.conv1.weight                                                                                                                       | (32, 3, 3, 3)                                 |
| backbone.conv2.weight                                | backbone.conv2.weight                                                                                                                       | (64, 32, 3, 3)                                |
| ins_embed_head.center_head.0.*                       | ins_embed_head.center_head.0.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                     | (128,) () (128,) (128,) (128,) (128,128,3,3)  |
| ins_embed_head.center_head.1.*                       | ins_embed_head.center_head.1.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                     | (32,) () (32,) (32,) (32,) (32,128,3,3)       |
| ins_embed_head.center_predictor.*                    | ins_embed_head.center_predictor.{bias,weight}                                                                                               | (1,) (1,32,1,1)                               |
| ins_embed_head.decoder.res2.fuse_conv.0.*            | ins_embed_head.decoder.res2.fuse_conv.0.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}          | (128,) () (128,) (128,) (128,) (128,160,3,3)  |
| ins_embed_head.decoder.res2.fuse_conv.1.*            | ins_embed_head.decoder.res2.fuse_conv.1.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}          | (128,) () (128,) (128,) (128,) (128,128,3,3)  |
| ins_embed_head.decoder.res2.project_conv.*           | ins_embed_head.decoder.res2.project_conv.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}         | (32,) () (32,) (32,) (32,) (32,256,1,1)       |
| ins_embed_head.decoder.res3.fuse_conv.0.*            | ins_embed_head.decoder.res3.fuse_conv.0.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}          | (128,) () (128,) (128,) (128,) (128,320,3,3)  |
| ins_embed_head.decoder.res3.fuse_conv.1.*            | ins_embed_head.decoder.res3.fuse_conv.1.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}          | (128,) () (128,) (128,) (128,) (128,128,3,3)  |
| ins_embed_head.decoder.res3.project_conv.*           | ins_embed_head.decoder.res3.project_conv.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}         | (64,) () (64,) (64,) (64,) (64,728,1,1)       |
| ins_embed_head.decoder.res5.project_conv.convs.0.*   | ins_embed_head.decoder.res5.project_conv.convs.0.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight} | (256,) () (256,) (256,) (256,) (256,2048,1,1) |
| ins_embed_head.decoder.res5.project_conv.convs.1.*   | ins_embed_head.decoder.res5.project_conv.convs.1.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight} | (256,) () (256,) (256,) (256,) (256,2048,3,3) |
| ins_embed_head.decoder.res5.project_conv.convs.2.*   | ins_embed_head.decoder.res5.project_conv.convs.2.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight} | (256,) () (256,) (256,) (256,) (256,2048,3,3) |
| ins_embed_head.decoder.res5.project_conv.convs.3.*   | ins_embed_head.decoder.res5.project_conv.convs.3.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight} | (256,) () (256,) (256,) (256,) (256,2048,3,3) |
| ins_embed_head.decoder.res5.project_conv.convs.4.1.* | ins_embed_head.decoder.res5.project_conv.convs.4.1.{bias,weight}                                                                            | (256,) (256,2048,1,1)                         |
| ins_embed_head.decoder.res5.project_conv.project.*   | ins_embed_head.decoder.res5.project_conv.project.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight} | (256,) () (256,) (256,) (256,) (256,1280,1,1) |
| ins_embed_head.offset_head.0.*                       | ins_embed_head.offset_head.0.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                     | (128,) () (128,) (128,) (128,) (128,128,3,3)  |
| ins_embed_head.offset_head.1.*                       | ins_embed_head.offset_head.1.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                     | (32,) () (32,) (32,) (32,) (32,128,3,3)       |
| ins_embed_head.offset_predictor.*                    | ins_embed_head.offset_predictor.{bias,weight}                                                                                               | (2,) (2,32,1,1)                               |
| sem_seg_head.decoder.res2.fuse_conv.0.*              | sem_seg_head.decoder.res2.fuse_conv.0.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}            | (256,) () (256,) (256,) (256,) (256,288,3,3)  |
| sem_seg_head.decoder.res2.fuse_conv.1.*              | sem_seg_head.decoder.res2.fuse_conv.1.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}            | (256,) () (256,) (256,) (256,) (256,256,3,3)  |
| sem_seg_head.decoder.res2.project_conv.*             | sem_seg_head.decoder.res2.project_conv.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}           | (32,) () (32,) (32,) (32,) (32,256,1,1)       |
| sem_seg_head.decoder.res3.fuse_conv.0.*              | sem_seg_head.decoder.res3.fuse_conv.0.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}            | (256,) () (256,) (256,) (256,) (256,320,3,3)  |
| sem_seg_head.decoder.res3.fuse_conv.1.*              | sem_seg_head.decoder.res3.fuse_conv.1.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}            | (256,) () (256,) (256,) (256,) (256,256,3,3)  |
| sem_seg_head.decoder.res3.project_conv.*             | sem_seg_head.decoder.res3.project_conv.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}           | (64,) () (64,) (64,) (64,) (64,728,1,1)       |
| sem_seg_head.decoder.res5.project_conv.convs.0.*     | sem_seg_head.decoder.res5.project_conv.convs.0.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) () (256,) (256,) (256,) (256,2048,1,1) |
| sem_seg_head.decoder.res5.project_conv.convs.1.*     | sem_seg_head.decoder.res5.project_conv.convs.1.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) () (256,) (256,) (256,) (256,2048,3,3) |
| sem_seg_head.decoder.res5.project_conv.convs.2.*     | sem_seg_head.decoder.res5.project_conv.convs.2.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) () (256,) (256,) (256,) (256,2048,3,3) |
| sem_seg_head.decoder.res5.project_conv.convs.3.*     | sem_seg_head.decoder.res5.project_conv.convs.3.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) () (256,) (256,) (256,) (256,2048,3,3) |
| sem_seg_head.decoder.res5.project_conv.convs.4.1.*   | sem_seg_head.decoder.res5.project_conv.convs.4.1.{bias,weight}                                                                              | (256,) (256,2048,1,1)                         |
| sem_seg_head.decoder.res5.project_conv.project.*     | sem_seg_head.decoder.res5.project_conv.project.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) () (256,) (256,) (256,) (256,1280,1,1) |
| sem_seg_head.head.0.*                                | sem_seg_head.head.0.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                              | (256,) () (256,) (256,) (256,) (256,256,3,3)  |
| sem_seg_head.head.1.*                                | sem_seg_head.head.1.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                              | (256,) () (256,) (256,) (256,) (256,256,3,3)  |
| sem_seg_head.predictor.*                             | sem_seg_head.predictor.{bias,weight}                                                                                                        | (19,) (19,256,1,1)                            |
[08/19 14:34:42] fvcore.common.checkpoint INFO: Loading trainer from output/model_0089999.pth ...
[08/19 14:34:42] detectron2.engine.hooks INFO: Loading scheduler from state_dict ...
[08/19 14:34:43] detectron2.engine.train_loop INFO: Starting training from iteration 90000
[08/19 14:34:43] detectron2.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[08/19 14:34:43] detectron2.data.datasets.cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/19 14:34:43] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2048, sample_style='choice')]
[08/19 14:34:43] detectron2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/19 14:34:43] detectron2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/19 14:34:43] detectron2.evaluation.evaluator INFO: Start inference on 62 batches
[08/19 14:34:43] detectron2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval_lcelufwi ...
[08/19 14:34:43] detectron2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval__zge3ig9 ...
[08/19 14:35:09] detectron2.evaluation.evaluator INFO: Inference done 11/62. Dataloading: 0.0021 s/iter. Inference: 0.2571 s/iter. Eval: 0.5490 s/iter. Total: 0.8081 s/iter. ETA=0:00:41
[08/19 14:35:14] detectron2.evaluation.evaluator INFO: Inference done 16/62. Dataloading: 0.0013 s/iter. Inference: 0.2699 s/iter. Eval: 0.6587 s/iter. Total: 0.9300 s/iter. ETA=0:00:42
[08/19 14:35:19] detectron2.evaluation.evaluator INFO: Inference done 21/62. Dataloading: 0.0011 s/iter. Inference: 0.2714 s/iter. Eval: 0.6807 s/iter. Total: 0.9533 s/iter. ETA=0:00:39
[08/19 14:35:25] detectron2.evaluation.evaluator INFO: Inference done 26/62. Dataloading: 0.0015 s/iter. Inference: 0.2783 s/iter. Eval: 0.7436 s/iter. Total: 1.0235 s/iter. ETA=0:00:36
[08/19 14:35:31] detectron2.evaluation.evaluator INFO: Inference done 31/62. Dataloading: 0.0015 s/iter. Inference: 0.2816 s/iter. Eval: 0.7720 s/iter. Total: 1.0551 s/iter. ETA=0:00:32
[08/19 14:35:37] detectron2.evaluation.evaluator INFO: Inference done 36/62. Dataloading: 0.0015 s/iter. Inference: 0.2829 s/iter. Eval: 0.7817 s/iter. Total: 1.0662 s/iter. ETA=0:00:27
[08/19 14:35:42] detectron2.evaluation.evaluator INFO: Inference done 41/62. Dataloading: 0.0014 s/iter. Inference: 0.2835 s/iter. Eval: 0.7866 s/iter. Total: 1.0717 s/iter. ETA=0:00:22
[08/19 14:35:48] detectron2.evaluation.evaluator INFO: Inference done 46/62. Dataloading: 0.0014 s/iter. Inference: 0.2837 s/iter. Eval: 0.7901 s/iter. Total: 1.0754 s/iter. ETA=0:00:17
[08/19 14:35:53] detectron2.evaluation.evaluator INFO: Inference done 51/62. Dataloading: 0.0014 s/iter. Inference: 0.2832 s/iter. Eval: 0.7841 s/iter. Total: 1.0689 s/iter. ETA=0:00:11
[08/19 14:35:58] detectron2.evaluation.evaluator INFO: Inference done 55/62. Dataloading: 0.0015 s/iter. Inference: 0.2854 s/iter. Eval: 0.8028 s/iter. Total: 1.0898 s/iter. ETA=0:00:07
[08/19 14:36:04] detectron2.evaluation.evaluator INFO: Inference done 60/62. Dataloading: 0.0015 s/iter. Inference: 0.2857 s/iter. Eval: 0.8039 s/iter. Total: 1.0912 s/iter. ETA=0:00:02
[08/19 14:36:07] detectron2.evaluation.evaluator INFO: Total inference time: 0:01:03.163849 (1.108138 s / iter per device, on 8 devices)
[08/19 14:36:07] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:16 (0.286771 s / iter per device, on 8 devices)
